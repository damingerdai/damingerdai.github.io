<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/12/14/hello-world/"/>
      <url>/2023/12/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>学习multipass笔记</title>
      <link href="/2023/12/14/software/multipass-learning/"/>
      <url>/2023/12/14/software/multipass-learning/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Multipass 是一个轻量虚拟机管理器，是由 Ubuntu 运营公司 Canonical 所推出的开源项目。运行环境支持 Linux、Windows、macOS。在不同的操作系统上，使用的是不同的虚拟化技术。在 Linux 上使用的是 KVM、Window 上使用 Hyper-V、macOS 中使用 HyperKit 以最小开销运行 VM，支持在笔记本模拟小型云。</p><p>同时，Multipass 提供了一个命令行界面来启动和管理 Linux 实例。下载一个全新的镜像需要几秒钟的时间，并且在几分钟内就可以启动并运行 VM。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在window环境下进行部署，下载最新安装包：<a href="https://github.com/canonical/multipass/releases/">https://github.com/canonical/multipass/releases/</a></p><h1 id="创建vm"><a href="#创建vm" class="headerlink" title="创建vm"></a>创建vm</h1><p>创建实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multipass launch -n k3s-master -c 2 -m 4G -d 10G</span><br></pre></td></tr></table></figure><p>查看实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">multipass list</span><br><span class="line"></span><br><span class="line">Name                    State             IPv4             Image</span><br><span class="line">k3s-master              Running           172.19.151.166   Ubuntu 22.04 LTS</span><br></pre></td></tr></table></figure><p>查看实例状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Name:           k3s-master</span><br><span class="line">State:          Running</span><br><span class="line">IPv4:           172.19.151.166</span><br><span class="line">Release:        Ubuntu 22.04.3 LTS</span><br><span class="line">Image hash:     6d6af17f28c8 (Ubuntu 22.04 LTS)</span><br><span class="line">CPU(s):         2</span><br><span class="line">Load:           0.00 0.00 0.00</span><br><span class="line">Disk usage:     1.6GiB out of 9.6GiB</span><br><span class="line">Memory usage:   213.8MiB out of 3.8GiB</span><br><span class="line">Mounts:         --</span><br></pre></td></tr></table></figure><p>进入shell环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">multipass shell k3s-maste</span><br><span class="line"></span><br><span class="line">Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.0-91-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Thu Dec 14 20:45:28 CST 2023</span><br><span class="line"></span><br><span class="line">  System load:  0.0               Processes:             100</span><br><span class="line">  Usage of /:   17.2% of 9.51GB   Users logged <span class="keyword">in</span>:       1</span><br><span class="line">  Memory usage: 6%                IPv4 address <span class="keyword">for</span> eth0: 172.19.151.166</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line"> * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s</span><br><span class="line">   just raised the bar <span class="keyword">for</span> easy, resilient and secure K8s cluster deployment.</span><br><span class="line"></span><br><span class="line">   https://ubuntu.com/engage/secure-kubernetes-at-the-edge</span><br><span class="line"></span><br><span class="line">Expanded Security Maintenance <span class="keyword">for</span> Applications is not enabled.</span><br><span class="line"></span><br><span class="line">0 updates can be applied immediately.</span><br><span class="line"></span><br><span class="line">Enable ESM Apps to receive additional future security updates.</span><br><span class="line">See https://ubuntu.com/esm or run: sudo pro status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Thu Dec 14 20:26:30 2023 from 172.19.144.1</span><br><span class="line">To run a <span class="built_in">command</span> as administrator (user <span class="string">&quot;root&quot;</span>), use <span class="string">&quot;sudo &lt;command&gt;&quot;</span>.</span><br><span class="line">See <span class="string">&quot;man sudo_root&quot;</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><ol><li><a href="https://www.mobaijun.com/posts/3701652676.html">【工具系列】轻量级虚拟机 Multipass 使用教程</a></li><li><a href="https://www.cnblogs.com/hewei-blogs/articles/17569105.html">轻量虚拟机 Multipass 的部署和使用</a></li><li><a href="https://jackkuo.org/post/multipass_tutorial/">Multipass - 如 Docker 般的虛擬機</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> multipass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HorizontalPodAutoscaler入门实践</title>
      <link href="/2023/09/27/software/k8s/horizontal-pod-autoscaler-getting-started/"/>
      <url>/2023/09/27/software/k8s/horizontal-pod-autoscaler-getting-started/</url>
      
        <content type="html"><![CDATA[<h1 id="HorizontalPodAutoscaler"><a href="#HorizontalPodAutoscaler" class="headerlink" title="HorizontalPodAutoscaler"></a>HorizontalPodAutoscaler</h1><p>在Kubernetes中，HorizontalPodAutoscaler 自动更新工作负载资源（例如Deployment或者StatefulSet），目的是自动扩缩工作负载以满足需求。水平扩缩意味着对增加的负载的响应是部署更多的 Pod。</p><p>本文目的是通过Docker Desktop上的Kubernetes实例去实践pod的水平扩展。</p><p>本文默认Docker Desktop上的Kubernetes已经安装完成。如果需要帮助，可以阅读<a href="https://damingerdai.github.io/2021/01/14/software/k8s/how-to-install-docker-desktop-k8s/">Docker Desktop自带k8s安装笔记</a>。</p><h1 id="安装-Metrics-server"><a href="#安装-Metrics-server" class="headerlink" title="安装 Metrics server"></a>安装 Metrics server</h1><p>由于Docker Desktop上的Kubernetes默认并没有安装Metrics server，而HorizontalPodAutoscaler依赖通过Metrics server获取到的数据， 因此需要提前安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl top node </span><br><span class="line">error: Metrics API not available</span><br></pre></td></tr></table></figure><p>从<a href="https://github.com/kubernetes-sigs/metrics-server/releases">Metrics server的release页面</a>获取最新的<code>components.yaml</code>文件，</p><p>然后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f components.yaml</span><br></pre></td></tr></table></figure><p>镜像的拉取和运行需要一点时间。我们可以通过以下命令查看运行情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl  get pod -n kube-system | grep metrics</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">metrics-server-75f45b4dd4-fbxd2          1/1     Running   0               3h25m</span><br></pre></td></tr></table></figure><p>查看node资源情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl top node</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">NAME             CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   </span><br><span class="line">docker-desktop   1901m        47%    6250Mi          80% </span><br></pre></td></tr></table></figure><p>查看pod资源情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kubectl top pods -A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">NAMESPACE           NAME                                     CPU(cores)   MEMORY(bytes)             </span><br><span class="line">kube-system         coredns-5d78c9869d-dq2s7                 4m           16Mi            </span><br><span class="line">kube-system         coredns-5d78c9869d-g5xhx                 2m           21Mi            </span><br><span class="line">kube-system         etcd-docker-desktop                      20m          72Mi            </span><br><span class="line">kube-system         kube-apiserver-docker-desktop            32m          271Mi           </span><br><span class="line">kube-system         kube-controller-manager-docker-desktop   11m          64Mi            </span><br><span class="line">kube-system         kube-proxy-qdc55                         1m           25Mi            </span><br><span class="line">kube-system         kube-scheduler-docker-desktop            5m           32Mi            </span><br><span class="line">kube-system         metrics-server-75f45b4dd4-fbxd2          6m           23Mi            </span><br><span class="line">kube-system         storage-provisioner                      4m           15Mi            </span><br><span class="line">kube-system         vpnkit-controller                        1m           14Mi  </span><br></pre></td></tr></table></figure><h1 id="配置HorizontalPodAutoscaler"><a href="#配置HorizontalPodAutoscaler" class="headerlink" title="配置HorizontalPodAutoscaler"></a>配置HorizontalPodAutoscaler</h1><p>这里以我的个人开源项目<a href="https://github.com/damingerdai/hoteler">hoteler</a>为例, 将下面的内容写入<code>hpa.yaml</code>文件中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">autoscaling/v2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">HorizontalPodAutoscaler</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">hoteler-api-hpa</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">hoteler-namespace</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">hoteler-api-hpa</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">maxReplicas:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">minReplicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">scaleTargetRef:</span></span><br><span class="line">    <span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hoteler-api</span></span><br><span class="line">  <span class="attr">metrics:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">Resource</span></span><br><span class="line">      <span class="attr">resource:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">cpu</span></span><br><span class="line">        <span class="attr">target:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">Utilization</span></span><br><span class="line">          <span class="attr">averageUtilization:</span> <span class="number">50</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">Resource</span></span><br><span class="line">      <span class="attr">resource:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">memory</span></span><br><span class="line">        <span class="attr">target:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">Utilization</span></span><br><span class="line">          <span class="attr">averageUtilization:</span> <span class="number">50</span></span><br></pre></td></tr></table></figure><p><code>minReplicas: 1</code>表示最小一个pod实例，<code>maxReplicas: 5</code>则说明最多扩展到5个pod实例。</p><p><code>metrics</code>下面定义两个·Resource·， 第一个Resource规定当cpu资源占用率超过50%就会进行扩容，第二个Resource则规定了当内存使用率超过50%之后才会行将扩容。 这两个Resource是独立计算所需要的副本数量，取最大值。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/">Horizontal Pod Autoscaling</a></li><li><a href="https://srerun.com/article/2021/5/6/39.html">k8s的HPA安装测试</a></li><li><a href="https://juejin.cn/post/7104907264779583501">安装 Metrics server</a></li><li><a href="https://dev.to/docker/enable-kubernetes-metrics-server-on-docker-desktop-5434">Enable Kubernetes Metrics Server on Docker Desktop</a></li><li><a href="https://www.qikqiak.com/post/k8s-hpa-usage/">Kubernetes HPA 使用详解</a></li><li><a href="https://stackoverflow.com/questions/54302592/how-kubernetes-hpa-with-2-or-more-metrics-behaves-especially-the-no-of-replica">How kubernetes HPA with 2 or more metrics behaves - especially the no.of replicas calculation?</a></li><li><a href="https://github.com/damingerdai/hoteler/pull/749">feat: 使用k8s的HorizontalPodAutoscaler进行水平的资源缩放</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> docker </tag>
            
            <tag> Docker Desktop </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用bazel去构建基于express和typescript的nodejs项目</title>
      <link href="/2023/08/10/front-end/how-to-use-bazel-to-build-nodejs-typescript-expressjs/"/>
      <url>/2023/08/10/front-end/how-to-use-bazel-to-build-nodejs-typescript-expressjs/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Bazel 是一款类似于 Make、Maven 和 Gradle的开源构建和测试工具。它使用可读的高级构建语言，支持多种变成语言编写的项目，并且能够为多个平台进行构建。Bazel 支持构建包含多个仓库、大量开发人员的大型代码库。</p><p>详细介绍可见<a href="https://bazel.build/">Bazel官网</a>。</p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>本文的目的是使用bazel5去构建一个完整的nodejs后端项目，并不负责bazel相关知识的介绍。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>首先在<code>package.json</code>文件中·devDependencies·部分添加：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;@bazel/bazelisk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.7.5&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;@bazel/buildifier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;@bazel/ibazel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.16.0&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;@bazel/typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.8.1&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>然后再执行安装依赖命令。</p><p>创建<code>.bazelignore</code>文件并写入下面的内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.git</span><br><span class="line">node_modules</span><br><span class="line">dist</span><br></pre></td></tr></table></figure><p>创建<code>.bazelrc</code>文件并写入下面的内容:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"># Enable debugging tests with --config=debug</span><br><span class="line">test:debug --test_arg=--node_options=--inspect-brk --test_output=streamed --test_strategy=exclusive --test_timeout=9999 --nocache_test_results</span><br><span class="line"></span><br><span class="line"># Do not attempt to de-flake locally.</span><br><span class="line"># On CI we might set this to `3` to run with deflaking.</span><br><span class="line">test --flaky_test_attempts=1</span><br><span class="line"></span><br><span class="line">###############################</span><br><span class="line"># Filesystem interactions     #</span><br><span class="line">###############################</span><br><span class="line"></span><br><span class="line"># Create symlinks in the project:</span><br><span class="line"># - dist/bin for outputs</span><br><span class="line"># - dist/testlogs, dist/genfiles</span><br><span class="line"># - bazel-out</span><br><span class="line"># NB: bazel-out should be excluded from the editor configuration.</span><br><span class="line"># The checked-in /.vscode/settings.json does this for VSCode.</span><br><span class="line"># Other editors may require manual config to ignore this directory.</span><br><span class="line"># In the past, we say a problem where VSCode traversed a massive tree, opening file handles and</span><br><span class="line"># eventually a surprising failure with auto-discovery of the C++ toolchain in</span><br><span class="line"># MacOS High Sierra.</span><br><span class="line"># See https://github.com/bazelbuild/bazel/issues/4603</span><br><span class="line">build --symlink_prefix=dist/</span><br><span class="line"></span><br><span class="line"># Turn off legacy external runfiles</span><br><span class="line">build --nolegacy_external_runfiles</span><br><span class="line">run --nolegacy_external_runfiles</span><br><span class="line">test --nolegacy_external_runfiles</span><br><span class="line"></span><br><span class="line"># Turn on --incompatible_strict_action_env which was on by default</span><br><span class="line"># in Bazel 0.21.0 but turned off again in 0.22.0. Follow</span><br><span class="line"># https://github.com/bazelbuild/bazel/issues/7026 for more details.</span><br><span class="line"># This flag is needed to so that the bazel cache is not invalidated</span><br><span class="line"># when running bazel via `yarn bazel`.</span><br><span class="line"># See https://github.com/angular/angular/issues/27514.</span><br><span class="line">build --incompatible_strict_action_env</span><br><span class="line">run --incompatible_strict_action_env</span><br><span class="line">test --incompatible_strict_action_env</span><br><span class="line"></span><br><span class="line"># Do not build runfile trees by default. If an execution strategy relies on runfile</span><br><span class="line"># symlink teee, the tree is created on-demand. See: https://github.com/bazelbuild/bazel/issues/6627</span><br><span class="line"># and https://github.com/bazelbuild/bazel/commit/03246077f948f2790a83520e7dccc2625650e6df</span><br><span class="line">build --nobuild_runfile_links</span><br><span class="line"></span><br><span class="line">build --enable_runfiles</span><br><span class="line"></span><br><span class="line">###############################</span><br><span class="line"># Release support             #</span><br><span class="line"># Turn on these settings with #</span><br><span class="line">#  --config=release           #</span><br><span class="line">###############################</span><br><span class="line"></span><br><span class="line"># Releases should always be stamped with version control info</span><br><span class="line"># This command assumes node on the path and is a workaround for</span><br><span class="line"># https://github.com/bazelbuild/bazel/issues/4802</span><br><span class="line">build:release --workspace_status_command=&quot;yarn -s ng-dev release build-env-stamp --mode=release&quot;</span><br><span class="line">build:release --stamp</span><br><span class="line"></span><br><span class="line"># Building AIO against local Angular deps requires stamping</span><br><span class="line"># versions in Angular packages due to CLI version checks.</span><br><span class="line">build:aio_local_deps --stamp</span><br><span class="line">build:aio_local_deps --workspace_status_command=&quot;yarn -s --cwd aio local-workspace-status&quot;</span><br><span class="line"></span><br><span class="line"># Snapshots should also be stamped with version control information.</span><br><span class="line">build:snapshot-build --workspace_status_command=&quot;yarn -s ng-dev release build-env-stamp --mode=snapshot&quot;</span><br><span class="line">build:snapshot-build --stamp</span><br><span class="line"></span><br><span class="line">##########################################################</span><br><span class="line"># AIO architect build configuration                      #</span><br><span class="line"># See aio/angular.json for available configurations.     #</span><br><span class="line"># To build with a partiular configuration:               #</span><br><span class="line">#   bazel build //aio:build --aio_build_config=&lt;config&gt;  #</span><br><span class="line"># Default config is `stable``.                           #</span><br><span class="line">##########################################################</span><br><span class="line">build --flag_alias=aio_build_config=//aio:flag_aio_build_config</span><br><span class="line"></span><br><span class="line">####################################</span><br><span class="line"># AIO first party dep substitution #</span><br><span class="line"># Turn on with                     #</span><br><span class="line">#  --config=aio_local_deps         #</span><br><span class="line">####################################</span><br><span class="line"></span><br><span class="line">build:aio_local_deps --//aio:flag_aio_local_deps</span><br><span class="line"></span><br><span class="line">###############################</span><br><span class="line"># Output                      #</span><br><span class="line">###############################</span><br><span class="line"></span><br><span class="line"># A more useful default output mode for bazel query</span><br><span class="line"># Prints eg. &quot;ng_module rule //foo:bar&quot; rather than just &quot;//foo:bar&quot;</span><br><span class="line">query --output=label_kind</span><br><span class="line"></span><br><span class="line"># By default, failing tests don&#x27;t print any output, it goes to the log file</span><br><span class="line">test --test_output=errors</span><br><span class="line"></span><br><span class="line">################################</span><br><span class="line"># Settings for CircleCI        #</span><br><span class="line">################################</span><br><span class="line"></span><br><span class="line"># Bazel flags for CircleCI are in /.circleci/bazel.linux.rc and /.circleci/bazel.windows.rc</span><br><span class="line"></span><br><span class="line">##################################</span><br><span class="line"># Remote Build Execution support #</span><br><span class="line"># Turn on these settings with    #</span><br><span class="line">#  --config=remote               #</span><br><span class="line">##################################</span><br><span class="line"></span><br><span class="line"># The following --define=EXECUTOR=remote will be able to be removed</span><br><span class="line"># once https://github.com/bazelbuild/bazel/issues/7254 is fixed</span><br><span class="line">build:remote --define=EXECUTOR=remote</span><br><span class="line"></span><br><span class="line"># Set a higher timeout value, just in case.</span><br><span class="line">build:remote --remote_timeout=600</span><br><span class="line"></span><br><span class="line"># Bazel detects maximum number of jobs based on host resources.</span><br><span class="line"># Since we run remotely, we can increase this number significantly.</span><br><span class="line">common:remote --jobs=200</span><br><span class="line"></span><br><span class="line">build:remote --google_default_credentials</span><br><span class="line"></span><br><span class="line"># Limit the number of test jobs for on an AIO local deps build. The example tests running</span><br><span class="line"># concurrently pushes the circleci executor RAM usage to its limits.</span><br><span class="line">test:aio_local_deps --jobs=24</span><br><span class="line"></span><br><span class="line"># Force remote exeuctions to consider the entire run as linux</span><br><span class="line">build:remote --cpu=k8</span><br><span class="line">build:remote --host_cpu=k8</span><br><span class="line"></span><br><span class="line"># Toolchain and platform related flags</span><br><span class="line">build:remote --crosstool_top=@npm//@angular/build-tooling/bazel/remote-execution/cpp:cc_toolchain_suite</span><br><span class="line">build:remote --extra_toolchains=@npm//@angular/build-tooling/bazel/remote-execution/cpp:cc_toolchain</span><br><span class="line">build:remote --extra_execution_platforms=@npm//@angular/build-tooling/bazel/remote-execution:platform</span><br><span class="line">build:remote --host_platform=@npm//@angular/build-tooling/bazel/remote-execution:platform</span><br><span class="line">build:remote --platforms=@npm//@angular/build-tooling/bazel/remote-execution:platform</span><br><span class="line"></span><br><span class="line"># Remote instance and caching</span><br><span class="line">build:remote --remote_instance_name=projects/internal-200822/instances/primary_instance</span><br><span class="line">build:remote --project_id=internal-200822</span><br><span class="line">build:remote --remote_cache=remotebuildexecution.googleapis.com</span><br><span class="line">build:remote --remote_executor=remotebuildexecution.googleapis.com</span><br><span class="line"></span><br><span class="line"># Use HTTP remote cache</span><br><span class="line">build:remote-cache --remote_cache=https://storage.googleapis.com/angular-team-cache</span><br><span class="line">build:remote-cache --remote_accept_cached=true</span><br><span class="line">build:remote-cache --remote_upload_local_results=true</span><br><span class="line">build:remote-cache --google_default_credentials</span><br><span class="line"></span><br><span class="line"># Ensure that tags like &quot;no-remote-exec&quot; get propagated to actions created by rules,</span><br><span class="line"># even if the rule implementation does not explicitly pass them to the execution requirements.</span><br><span class="line"># https://bazel.build/reference/command-line-reference#flag--experimental_allow_tags_propagation</span><br><span class="line">common --experimental_allow_tags_propagation</span><br><span class="line"></span><br><span class="line"># Disable network access in the sandbox by default. To enable network access</span><br><span class="line"># for a particular target, use:</span><br><span class="line">#</span><br><span class="line"># load(&quot;@npm//@angular/build-tooling/bazel/remote-execution:index.bzl&quot;, &quot;ENABLE_NETWORK&quot;)</span><br><span class="line"># my_target(</span><br><span class="line">#   ...,</span><br><span class="line">#   exec_properties = ENABLE_NETWORK,   # Enables network in remote exec</span><br><span class="line">#   tags = [&quot;requires-network&quot;]         # Enables network in sandbox</span><br><span class="line"># )</span><br><span class="line">build --nosandbox_default_allow_network</span><br><span class="line"></span><br><span class="line">##################################</span><br><span class="line"># Saucelabs tests settings       #</span><br><span class="line"># Turn on these settings with    #</span><br><span class="line">#  --config=saucelabs            #</span><br><span class="line">##################################</span><br><span class="line"></span><br><span class="line"># For saucelabs tests we don&#x27;t want to enable flaky test attempts. Karma has its own integrated</span><br><span class="line"># retry mechanism and we do not want to retry unnecessarily if Karma already tried multiple times.</span><br><span class="line">test:saucelabs --flaky_test_attempts=1</span><br><span class="line"></span><br><span class="line">################</span><br><span class="line"># Flag Aliases #</span><br><span class="line">################</span><br><span class="line"></span><br><span class="line"># --ng_perf will ask the Ivy compiler to produce performance results for each build.</span><br><span class="line">build --flag_alias=ng_perf=//packages/compiler-cli:ng_perf</span><br><span class="line"></span><br><span class="line">####################################################</span><br><span class="line"># User bazel configuration</span><br><span class="line"># NOTE: This needs to be the *last* entry in the config.</span><br><span class="line">####################################################</span><br><span class="line"></span><br><span class="line"># Load any settings which are specific to the current user. Needs to be *last* statement</span><br><span class="line"># in this config, as the user configuration should be able to overwrite flags from this file.</span><br><span class="line">try-import %workspace%/.bazelrc.user</span><br></pre></td></tr></table></figure><p>创建<code>.bazelversion</code>用于指定bazel版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.0.0</span><br></pre></td></tr></table></figure><blockquote><p>可以使用bazel5的任意版本，理论上都支持，但是不要使用bazel6的版本</p></blockquote><p>新建<code>WORKSPACE</code>用于定义bazel的工作区：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">workspace(</span><br><span class="line">   name = &quot;express-postgres-ts-starter&quot;,</span><br><span class="line">    managed_directories = &#123;</span><br><span class="line">        &quot;@npm&quot;: [&quot;node_modules&quot;],</span><br><span class="line">    &#125;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>导入<code>http_archive</code>用于获取bazel的库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load(&quot;@bazel_tools//tools/build_defs/repo:http.bzl&quot;, &quot;http_archive&quot;)</span><br></pre></td></tr></table></figure><p>如果使用了<code>.yarn</code>文件夹用于限制yarn的版本，可以通过创建<code>yarn.bzl</code>解决：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YARN_PATH = &quot;.yarn/releases/yarn-1.22.19.cjs&quot;</span><br><span class="line">YARN_LABEL = &quot;//:&quot; + YARN_PATH</span><br></pre></td></tr></table></figure><p>然后在<code>WORKSPACE</code>导入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load(&quot;//:yarn.bzl&quot;, &quot;YARN_LABEL&quot;)</span><br></pre></td></tr></table></figure><p>引入bazel的nodesj依赖库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">http_archive(</span><br><span class="line">    name = &quot;build_bazel_rules_nodejs&quot;,</span><br><span class="line">    sha256 = &quot;5dd1e5dea1322174c57d3ca7b899da381d516220793d0adef3ba03b9d23baa8e&quot;,</span><br><span class="line">    urls = [</span><br><span class="line">        &quot;https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.3/rules_nodejs-5.8.3.tar.gz&quot;,</span><br><span class="line">        &quot;https://ghproxy.com/https://github.com/bazelbuild/rules_nodejs/releases/download/5.8.3/rules_nodejs-5.8.3.tar.gz&quot;</span><br><span class="line">    ],</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">load(&quot;@build_bazel_rules_nodejs//:repositories.bzl&quot;, &quot;build_bazel_rules_nodejs_dependencies&quot;)</span><br><span class="line"></span><br><span class="line">build_bazel_rules_nodejs_dependencies()</span><br><span class="line"></span><br><span class="line">http_archive(</span><br><span class="line">    name = &quot;rules_pkg&quot;,</span><br><span class="line">    sha256 = &quot;62eeb544ff1ef41d786e329e1536c1d541bb9bcad27ae984d57f18f314018e66&quot;,</span><br><span class="line">    urls = [</span><br><span class="line">        &quot;https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.6.0/rules_pkg-0.6.0.tar.gz&quot;,</span><br><span class="line">        &quot;https://github.com/bazelbuild/rules_pkg/releases/download/0.6.0/rules_pkg-0.6.0.tar.gz&quot;,</span><br><span class="line">        &quot;https://ghproxy.com/https://github.com/bazelbuild/rules_pkg/releases/download/0.6.0/rules_pkg-0.6.0.tar.gz&quot;,</span><br><span class="line">    ],</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># Fetch Aspect lib for utilities like write_source_files</span><br><span class="line"># NOTE: We cannot move past version 1.23.2 of aspect_bazel_lib because it requires us to move to bazel 6.0.0 which</span><br><span class="line">#       breaks our usage of managed_directories</span><br><span class="line">http_archive(</span><br><span class="line">    name = &quot;aspect_bazel_lib&quot;,</span><br><span class="line">    sha256 = &quot;4b2e774387bae6242879820086b7b738d49bf3d0659522ea5d9363be01a27582&quot;,</span><br><span class="line">    strip_prefix = &quot;bazel-lib-1.23.2&quot;,</span><br><span class="line">    urls = [</span><br><span class="line">        &quot;https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.23.2.tar.gz&quot;,</span><br><span class="line">        &quot;https://ghproxy.com/https://github.com/aspect-build/bazel-lib/archive/refs/tags/v1.23.2.tar.gz&quot;,</span><br><span class="line">    ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>配置nodejs工具链：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">load(&quot;@rules_nodejs//nodejs:repositories.bzl&quot;, &quot;nodejs_register_toolchains&quot;)</span><br><span class="line"></span><br><span class="line">nodejs_register_toolchains(</span><br><span class="line">    name = &quot;nodejs&quot;,</span><br><span class="line">    node_version = &quot;18.10.0&quot;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>在arm mac上不支持nodejs20的版本，不确定其他平台时候是否支持nodejs20</p></blockquote><p>配置<code>yarn_install</code>下载依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">load(&quot;@build_bazel_rules_nodejs//:index.bzl&quot;, &quot;yarn_install&quot;)</span><br><span class="line"></span><br><span class="line">yarn_install(</span><br><span class="line">    name = &quot;npm&quot;,</span><br><span class="line">data = [</span><br><span class="line">        YARN_LABEL,</span><br><span class="line">        &quot;//:.yarnrc&quot;,</span><br><span class="line">&quot;//:patches/trim-newlines+5.0.0.patch&quot;</span><br><span class="line">],</span><br><span class="line">exports_directories_only = False,</span><br><span class="line">symlink_node_modules = True,</span><br><span class="line">    package_json = &quot;//:package.json&quot;,</span><br><span class="line">yarn = YARN_LABEL,</span><br><span class="line">    yarn_lock = &quot;//:yarn.lock&quot;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>创建<code>BUILD.bazel</code>, 并定义为公开的:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">package(default_visibility = [&quot;//visibility:public&quot;])</span><br></pre></td></tr></table></figure><p>导入<code>ts_project</code>和<code>nodejs_binary</code>用于构建typescript和nodejs：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load(&quot;@npm//@bazel/typescript:index.bzl&quot;, &quot;ts_project&quot;)</span><br><span class="line">load(&quot;@build_bazel_rules_nodejs//:index.bzl&quot;, &quot;nodejs_binary&quot;)</span><br></pre></td></tr></table></figure><p>定义<code>SRCS</code>变量用于声明所有需要参与编译的ts文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SRCS = glob(</span><br><span class="line">[</span><br><span class="line">&quot;src/**/*.ts&quot;,</span><br><span class="line">],</span><br><span class="line">exclude = [</span><br><span class="line">&quot;src/**/*.spec.ts&quot;</span><br><span class="line">]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>使用<code>ts_project</code>将ts编译成js：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">ts_project(</span><br><span class="line">    name = &quot;server-ts&quot;,</span><br><span class="line">    srcs = [&quot;server.ts&quot; ] + SRCS,</span><br><span class="line">    resolve_json_module = True,</span><br><span class="line">    source_map = True,</span><br><span class="line">    tsconfig = &quot;//:tsconfig.json&quot;,</span><br><span class="line">    visibility = [&quot;//visibility:public&quot;],</span><br><span class="line">    deps = [</span><br><span class="line">        &quot;@npm//@apollo/server&quot;,</span><br><span class="line">        &quot;@npm//@graphql-tools/merge&quot;,</span><br><span class="line">        &quot;@npm//body-parser&quot;,</span><br><span class="line">        &quot;@npm//compression&quot;,</span><br><span class="line">        &quot;@npm//cookie-parser&quot;,</span><br><span class="line">        &quot;@npm//dotenv&quot;,</span><br><span class="line">        &quot;@npm//exceljs&quot;,</span><br><span class="line">        &quot;@npm//express&quot;,</span><br><span class="line">        &quot;@npm//express-fileupload&quot;,</span><br><span class="line">        &quot;@npm//express-joi-validation&quot;,</span><br><span class="line">        &quot;@npm//express-session&quot;,</span><br><span class="line">        &quot;@npm//graphql&quot;,</span><br><span class="line">        &quot;@npm//graphql-tag&quot;,</span><br><span class="line">        &quot;@npm//helmet&quot;,</span><br><span class="line">        &quot;@npm//joi&quot;,</span><br><span class="line">        &quot;@npm//jsonwebtoken&quot;,</span><br><span class="line">        &quot;@npm//knex&quot;,</span><br><span class="line">        &quot;@npm//lodash&quot;,</span><br><span class="line">        &quot;@npm//minio&quot;,</span><br><span class="line">        &quot;@npm//morgan&quot;,</span><br><span class="line">        &quot;@npm//pg&quot;,</span><br><span class="line">        &quot;@npm//pg-boss&quot;,</span><br><span class="line">        &quot;@npm//redis&quot;,</span><br><span class="line">        &quot;@npm//socket.io&quot;,</span><br><span class="line">        &quot;@npm//winston&quot;,</span><br><span class="line"></span><br><span class="line">        &quot;@npm//@types/express&quot;,</span><br><span class="line">        &quot;@npm//@types/express-fileupload&quot;,</span><br><span class="line">        &quot;@npm//@types/express-session&quot;,</span><br><span class="line">        &quot;@npm//@types/jest&quot;,</span><br><span class="line">        &quot;@npm//@types/node&quot;,</span><br><span class="line">    ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>现在可以编译了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn bazel build //... </span><br></pre></td></tr></table></figure><p>最后可以在<code>dist/bin</code>看到一个<code>server.js</code>, 我们可以通过执行<code>node dist/bin/server.js</code>运行我们的nodejs项目了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://bazel.build/">Bazel官网</a></li><li><a href="https://zhuanlan.zhihu.com/p/411563404">Bazel 学习笔记 (一) 快速开始</a></li><li><a href="https://zhuanlan.zhihu.com/p/402311730">使用Bazel编译TypeScript</a></li><li><a href="https://github.com/angular/angular">angular</a></li><li><a href="https://github.com/damingerdai/express-postgres-ts-starter/pull/462">feat: add bazel support</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bazel </tag>
            
            <tag> typescript </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用k3s部署PostgreSQL用于开发</title>
      <link href="/2023/04/14/back-end/how-to-user-k3s-deploy-postgresql-for-dev/"/>
      <url>/2023/04/14/back-end/how-to-user-k3s-deploy-postgresql-for-dev/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>PostgreSQL是世界上最先进的开源数据库。<br>本文的目的是使用k3s本地部署PostgreSQL用于本地开发使用，不具备直接上生产的能力。</p><h2 id="安装PostgreSQL"><a href="#安装PostgreSQL" class="headerlink" title="安装PostgreSQL"></a>安装PostgreSQL</h2><p>首先准备<code>config.yaml</code>用于定义PostgreSQL的配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">postgres-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">postgres</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">POSTGRES_USER:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">  <span class="attr">POSTGRES_DB:</span> <span class="string">postgres</span></span><br></pre></td></tr></table></figure><p>申请PersistentVolume用于数据持久化的存储：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">postgres-pv-volume</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">manual</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">5Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">&quot;/mnt/data&quot;</span></span><br></pre></td></tr></table></figure><p>申请PersistentVolumeClaim用于数据持久化</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">postgres-pv-claim</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">manual</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">2Gi</span></span><br></pre></td></tr></table></figure><p>数据库是一个有状态的服务，我认为StatefulSet比Pod更为合适，所以使用StatefulSet创建PostgreSQL实例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">&quot;postgres&quot;</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">postgres:15.0</span></span><br><span class="line">          <span class="attr">envFrom:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">configMapRef:</span></span><br><span class="line">                <span class="attr">name:</span> <span class="string">postgres-config</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5432</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">postgres-data</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/lib/PostgreSQL/data</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">postgres-data</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">postgres-pv-claim</span></span><br></pre></td></tr></table></figure><p>定义一个Service让k3s里的其他pod可以访问数据库</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">postgres</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">5432</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">postgres</span></span><br></pre></td></tr></table></figure><p>现在我们可以执行kubectl apply命令去创建各种资源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f config.yaml</span><br><span class="line">kubectl apply -f pv.yaml</span><br><span class="line">kubectl apply -f pvc.yaml</span><br><span class="line">kubectl apply -f statefulset.yaml</span><br></pre></td></tr></table></figure><blockquote><p>请尽量按照顺序执行命令</p></blockquote><p>查看一下效果:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods </span><br><span class="line"></span><br><span class="line">NAME         READY   STATUS    RESTARTS   AGE</span><br><span class="line">postgres-0   1/1     Running   0          17h</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line">kubectl get services</span><br><span class="line"></span><br><span class="line">NAME       TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">postgres   ClusterIP   X.X.X.X   &lt;none&gt;        5432/TCP   17h</span><br></pre></td></tr></table></figure><p><code>X.X.X.X</code>是你k3s的集群内部网址，因人而异</p><h2 id="配置PgBouncer"><a href="#配置PgBouncer" class="headerlink" title="配置PgBouncer"></a>配置PgBouncer</h2><p>PostgreSQL是使用多进程的模式去创建连接，所以创建连接的成本比较高，因此推荐使用PgBouncer作为PostgreSQL的连接池用于提高数据库的并发性能。</p><p>将上文中的PostgreSQL代理到本地:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl port-forward postgres-0 5432:5432</span><br></pre></td></tr></table></figure><p>使用任意方式登录到PostgreSQL数据库，执行一下sql命令:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> concat(<span class="string">&#x27;&quot;&#x27;</span>, usename, <span class="string">&#x27;&quot; &quot;&#x27;</span>, passwd, <span class="string">&#x27;&quot;&#x27;</span>) <span class="keyword">FROM</span> pg_shadow;</span><br></pre></td></tr></table></figure><p>将获得的结果写入userlist.txt文件中</p><blockquote><p>该步骤不可以省略，因为不同的数据库实例导出的passwd是不一样的！！！</p></blockquote><p>准备pgbouncer.ini：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[databases]</span></span><br><span class="line"><span class="attr">postgres</span> = host=postgres port=<span class="number">5432</span> dbname=postgres user=postgres password=<span class="number">123456</span></span><br><span class="line"></span><br><span class="line"><span class="section">[pgbouncer]</span></span><br><span class="line"><span class="attr">listen_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">listen_port</span> = <span class="number">5432</span></span><br><span class="line"><span class="attr">admin_users</span> = postgres</span><br><span class="line"><span class="attr">stats_users</span> = postgres</span><br><span class="line"><span class="attr">auth_file</span> = /etc/pgbouncer/userlist.txt</span><br><span class="line"><span class="attr">auth_type</span> = scram-sha-<span class="number">256</span> </span><br><span class="line"><span class="attr">pool_mode</span> = session</span><br><span class="line"><span class="attr">ignore_startup_parameters</span> = extra_float_digits</span><br><span class="line"></span><br><span class="line"><span class="comment"># Log settings</span></span><br><span class="line"><span class="comment"># admin_users = postgres</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Connection sanity checks, timeouts</span></span><br><span class="line"><span class="attr">server_tls_sslmode</span> = prefer</span><br><span class="line"></span><br><span class="line"><span class="comment"># TLS settings</span></span><br><span class="line"><span class="attr">client_tls_sslmode</span> = disable</span><br></pre></td></tr></table></figure><p>创建pgbouncer.yaml用于定义pgbouncer的配置信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">KUBE_NAMESPACE=<span class="string">&quot;default&quot;</span></span><br><span class="line"><span class="built_in">cd</span> `<span class="built_in">dirname</span> <span class="variable">$0</span>`</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.ini</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">basename</span>=<span class="string">&quot;<span class="subst">$(basename $file)</span>&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$basname</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line">  kubectl create secret generic <span class="string">&quot;<span class="variable">$&#123;basename%.*&#125;</span>&quot;</span>-config --namespace=<span class="string">&quot;<span class="variable">$KUBE_NAMESPACE</span>&quot;</span> --from-file=<span class="string">&quot;<span class="variable">$file</span>&quot;</span>  --from-file=userlist.txt -o yaml --dry-run=client | <span class="built_in">tee</span> <span class="string">&quot;<span class="variable">$&#123;basename%.*&#125;</span>.yaml&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>定义Deployment:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pgbouncer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">pgbouncer</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span>  <span class="comment"># removes old replicasets for deployment rollbacks</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">0</span>  <span class="comment"># Avoid Terminating and ContainerCreating at the same time</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">pgbouncer</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">pgbouncer</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pgbouncer</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">rmccaffrey/pgbouncer:1.18.1</span></span><br><span class="line">          <span class="comment">#imagePullPolicy: Always</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">&quot;100Mi&quot;</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&quot;0.5&quot;</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">&quot;200Mi&quot;</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5432</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">configfiles</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">&quot;/etc/pgbouncer&quot;</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span>  <span class="comment"># writes update the secret!</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">lifecycle:</span></span><br><span class="line">            <span class="attr">preStop:</span></span><br><span class="line">              <span class="attr">exec:</span></span><br><span class="line">                <span class="comment"># Allow existing queries clients to complete within 120 seconds</span></span><br><span class="line">                <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;killall -INT pgbouncer &amp;&amp; sleep 120&quot;</span>]</span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span> [<span class="string">&#x27;all&#x27;</span>]</span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">configfiles</span></span><br><span class="line">          <span class="attr">secret:</span></span><br><span class="line">            <span class="attr">secretName:</span> <span class="string">pgbouncer-config</span></span><br></pre></td></tr></table></figure><p>定义Service:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pgbouncer</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">pgbouncer</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">5432</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">5432</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">pgbouncer</span></span><br></pre></td></tr></table></figure><p>创建资源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f pgbouncer.yaml</span><br><span class="line">kubectl apply -f deployment.yaml</span><br><span class="line">kubectl apply -f service.yaml</span><br></pre></td></tr></table></figure><p>查看效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl get services</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">NAME        TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">postgres    ClusterIP   X.X.X.X        &lt;none&gt;        5432/TCP   17h</span><br><span class="line">pgbouncer   ClusterIP   X.X.X.X        &lt;none&gt;        5432/TCP   50s</span><br></pre></td></tr></table></figure><p>使用port-forward代理到本地进行测试pgbouncer是否能够正常使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl port-forward service/pgbouncer 5432:5432</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文实现了使用k3s部署PostgreSQL和PgBouncer，可以用于一般的本地开发坏境使用，也在docker destkop上测试通过，但是没有在minikube上测试过。</p><p>以上资源可以在<a href="https://github.com/damingerdai/health-master/tree/main/deplyoments/db">health-master-deployments-db</a>和<a href="https://github.com/damingerdai/health-master/tree/main/deplyoments/pgbouncer">health-master-deployments-pgbouncer</a>上获取。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> PostgreSQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Windows下Docker启动容器时，端口被占用错误</title>
      <link href="/2023/02/26/back-end/windows_docker_port_in_use_issues/"/>
      <url>/2023/02/26/back-end/windows_docker_port_in_use_issues/</url>
      
        <content type="html"><![CDATA[<h1 id="解决Windows下Docker启动容器时，端口被占用错误"><a href="#解决Windows下Docker启动容器时，端口被占用错误" class="headerlink" title="解决Windows下Docker启动容器时，端口被占用错误"></a>解决Windows下Docker启动容器时，端口被占用错误</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在使用docker-compose启动mysql的时候遇到一个问题:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span>: An attempt was made to access a socket <span class="keyword">in</span> a way forbidden by its access permissions.</span><br></pre></td></tr></table></figure><p>然后查了一下是否存在应用占用了3306的端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr 3306</span><br></pre></td></tr></table></figure><p>结果很尴尬，并没有。。。</p><p>百度了一下，发现是<code>Hyper-V</code>会保留部分tcp端口导致我们自己无法使用这些端口, 使用如下命令查看保留的端口：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">netsh interface ipv4 show excludedportrange protocol=tcp</span><br><span class="line"></span><br><span class="line">协议 tcp 端口排除范围</span><br><span class="line"></span><br><span class="line">开始端口    结束端口</span><br><span class="line"><span class="literal">----------</span>    <span class="literal">--------</span></span><br><span class="line">      <span class="number">1026</span>        <span class="number">1125</span></span><br><span class="line">      <span class="number">1126</span>        <span class="number">1225</span></span><br><span class="line">      <span class="number">1226</span>        <span class="number">1325</span></span><br><span class="line">      <span class="number">1326</span>        <span class="number">1425</span></span><br><span class="line">      <span class="number">1426</span>        <span class="number">1525</span></span><br><span class="line">      <span class="number">1538</span>        <span class="number">1637</span></span><br><span class="line">      <span class="number">2327</span>        <span class="number">2426</span></span><br><span class="line">      <span class="number">2427</span>        <span class="number">2526</span></span><br><span class="line">      <span class="number">2527</span>        <span class="number">2626</span></span><br><span class="line">      <span class="number">2627</span>        <span class="number">2726</span></span><br><span class="line">      <span class="number">2727</span>        <span class="number">2826</span></span><br><span class="line">      <span class="number">2827</span>        <span class="number">2926</span></span><br><span class="line">      <span class="number">6344</span>        <span class="number">6567</span></span><br><span class="line">     <span class="number">50000</span>       <span class="number">50059</span>     *</span><br><span class="line">     <span class="number">50070</span>       <span class="number">50070</span>     *</span><br><span class="line"></span><br><span class="line">* - 管理的端口排除。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>解决方案很多，但是最推荐的该市修改永久排除保留端口：</p><p>首选关闭docker, 用管理员权限打开powershell， 输入以下命令用于关闭Hyper-V:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /Online /Disable-Feature:Microsoft-Hyper-V</span><br></pre></td></tr></table></figure><blockquote><p>该操作可能需要重启</p></blockquote><p>然后将3306端口永久排除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh int ipv4 add excludedportrange protocol=tcp startport=3306 numberofports=1 store=persistent</span><br></pre></td></tr></table></figure><p>最后重启Hyper-V:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /Online /Enable-Feature:Microsoft-Hyper-V /All</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://www.cnblogs.com/uncmd/p/16056993.html">解决Windows下Docker启动容器时，端口被占用错误</a></li><li><a href="https://www.cnblogs.com/fansys/articles/13375989.html">修改Hyper-V动态端口范围</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> windows </tag>
            
            <tag> docker desktop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录使用pg_dump中遇到的ssl问题</title>
      <link href="/2023/02/25/back-end/pg_dump_ssl_issues/"/>
      <url>/2023/02/25/back-end/pg_dump_ssl_issues/</url>
      
        <content type="html"><![CDATA[<h1 id="记录使用pg-dump中遇到的ssl问题"><a href="#记录使用pg-dump中遇到的ssl问题" class="headerlink" title="记录使用pg_dump中遇到的ssl问题"></a>记录使用pg_dump中遇到的ssl问题</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在使用<code>pg_dump</code>过程中遇到的两个问题：</p><ol><li>SSL connection is required. Please specify SSL options and retry.</li><li>SSL error: unsafe legacy renegotiation disabled</li></ol><h2 id="SSL-option问题"><a href="#SSL-option问题" class="headerlink" title="SSL option问题"></a>SSL option问题</h2><p>这是因为postgresql需要使用TLS&#x2F;SSL connections，我们可以设置一个环境变量<code>PGSSLMODE</code>为<code>required</code>就可以了。</p><p>针对Linux或者Macos用户，使用:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PGSSLMODE=require</span><br></pre></td></tr></table></figure><p>针对Windows用户，使用:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PGSSLMODE=require</span><br></pre></td></tr></table></figure><h2 id="unsafe-legacy-renegotiation-disabled"><a href="#unsafe-legacy-renegotiation-disabled" class="headerlink" title="unsafe legacy renegotiation disabled"></a>unsafe legacy renegotiation disabled</h2><p>这是因为ssl协议存在一个漏洞，后来升级的时候提供了一个开关默认关闭这个了漏洞，这个解决方法存在一定安全隐患，请谨慎使用。</p><p>创建一个自定义的<code>openssl.cnf</code>,并写入：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">openssl_conf</span> = openssl_init</span><br><span class="line"></span><br><span class="line"><span class="section">[openssl_init]</span></span><br><span class="line"><span class="attr">ssl_conf</span> = ssl_sect</span><br><span class="line"></span><br><span class="line"><span class="section">[ssl_sect]</span></span><br><span class="line"><span class="attr">system_default</span> = system_default_sect</span><br><span class="line"></span><br><span class="line"><span class="section">[system_default_sect]</span></span><br><span class="line"><span class="attr">Options</span> = UnsafeLegacyRenegotiation</span><br></pre></td></tr></table></figure><p>将该config文件的路径写入名为<code>OPENSSL_CONF</code>的环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> OPENSSL_CONF=/path/to/custom/openssl.cnf</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://learn.microsoft.com/en-us/azure/postgresql/migrate/how-to-migrate-using-dump-and-restore">Migrate your PostgreSQL database by using dump and restore</a></li><li><a href="https://stackoverflow.com/questions/71603314/ssl-error-unsafe-legacy-renegotiation-disabled">SSL error unsafe legacy renegotiation disabled</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssl </tag>
            
            <tag> pg_dump </tag>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一些测试币的水龙头</title>
      <link href="/2023/01/07/web3/some-token-faucet/"/>
      <url>/2023/01/07/web3/some-token-faucet/</url>
      
        <content type="html"><![CDATA[<h1 id="记录一些测试币的水龙头"><a href="#记录一些测试币的水龙头" class="headerlink" title="记录一些测试币的水龙头"></a>记录一些测试币的水龙头</h1><p>记录一些常用的区块链水龙头，以防忘记</p><h2 id="Goerli"><a href="#Goerli" class="headerlink" title="Goerli"></a>Goerli</h2><p><a href="https://goerli-faucet.slock.it/">Goerli Testnet Faucet</a>: 不太记得当初是怎么知道了，但是似乎永远失败…</p><p><a href="https://goerlifaucet.com/">GOERLI FAUCET</a>, 每天可以获取0.1 ETH(以前是可以每天领取0.25ETH), 需要使用<a href="https://www.alchemy.com/">Alchemy</a>账号.</p><p><a href="https://goerli-faucet.pk910.de/">Mining Faucet</a>, 使用cpu的算力去挖矿，问题不大，可以使用。</p><h2 id="polygon"><a href="#polygon" class="headerlink" title="polygon"></a>polygon</h2><p><a href="https://faucet.polygon.technology/">polygon faucet</a>, 支持多个测试网络，但是Goerli的ETH没拿到</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://hackmd.io/@m061i6/HJQQ4G5-j">免費取得Goerli測試幣</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> web3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web3 </tag>
            
            <tag> Goerli </tag>
            
            <tag> polygon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k3s使用Let‘s Encrypt配置https入口部署</title>
      <link href="/2022/09/03/back-end/k3s-uses-letsencrypt-and-traefik-to-deploy-the-https/"/>
      <url>/2022/09/03/back-end/k3s-uses-letsencrypt-and-traefik-to-deploy-the-https/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文记录k3s使用letsencrypt配置ssl证书和续签。</p><p>本文使用的k3s版本为： v1.23.6+k3s1。</p><h2 id="安装-cert-manager"><a href="#安装-cert-manager" class="headerlink" title="安装 cert-manager"></a>安装 cert-manager</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用官网提供的配置文件一键安装</span></span><br><span class="line"><span class="comment"># 如果拉取 github 资源有困难，可以从网络通畅的位置下载好粘贴过去</span></span><br><span class="line">$ kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.9.1/cert-manager.yaml</span><br></pre></td></tr></table></figure><p>如果一切正常，k3s</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get pods -n cert-manager</span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">cert-manager-6544c44c6b-tlhw8              1/1     Running   0          51s</span><br><span class="line">cert-manager-cainjector-5687864d5f-rldsg   1/1     Running   0          51s</span><br><span class="line">cert-manager-webhook-785bb86798-g4g7g      1/1     Running   0          51s</span><br></pre></td></tr></table></figure><h2 id="部署-Issuing-Certificates"><a href="#部署-Issuing-Certificates" class="headerlink" title="部署 Issuing Certificates"></a>部署 Issuing Certificates</h2><p>创建letsencrypt.yaml文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">cert-manager.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterIssuer</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cert-manager</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">letsencrypt</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">acme:</span></span><br><span class="line">    <span class="attr">email:</span> <span class="string">&lt;YOUR</span> <span class="string">EMAIL&gt;</span> <span class="comment"># replace this</span></span><br><span class="line">    <span class="attr">privateKeySecretRef:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">prod-issuer-account-key</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">https://acme-v02.api.letsencrypt.org/directory</span></span><br><span class="line">    <span class="attr">solvers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">http01:</span></span><br><span class="line">          <span class="attr">ingress:</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">traefik</span></span><br><span class="line">        <span class="attr">selector:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>请自行替换<YOUR email>为个人的邮件地址</YOUR></p></blockquote><p>部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f letsencrypt.yaml</span><br></pre></td></tr></table></figure><p>如果一切正常:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe clusterissuer letsencrypt</span><br><span class="line">Name:         letsencrypt</span><br><span class="line">Namespace:    </span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line">API Version:  cert-manager.io/v1</span><br><span class="line">Kind:         ClusterIssuer</span><br><span class="line">...</span><br><span class="line">Spec:</span><br><span class="line">  Acme:</span><br><span class="line">    Email:            user@example.com</span><br><span class="line">    Preferred Chain:  </span><br><span class="line">    Private Key Secret Ref:</span><br><span class="line">      Name:  prod-issuer-account-key</span><br><span class="line">    Server:  https://acme-v02.api.letsencrypt.org/directory</span><br><span class="line">    Solvers:</span><br><span class="line">      http01:</span><br><span class="line">        Ingress:</span><br><span class="line">          Class:  traefik</span><br><span class="line">      Selector:</span><br><span class="line">Status:</span><br><span class="line">  Acme:</span><br><span class="line">    Last Registered Email:  mingguobin@live.com</span><br><span class="line">    Uri:                    https://acme-v02.api.letsencrypt.org/acme/acct/715199687</span><br><span class="line">  Conditions:</span><br><span class="line">    Last Transition Time:  2022-09-03T12:20:23Z</span><br><span class="line">    Message:               The ACME account was registered with the ACME server</span><br><span class="line">    Observed Generation:   1</span><br><span class="line">    Reason:                ACMEAccountRegistered</span><br><span class="line">    Status:                True</span><br><span class="line">    Type:                  Ready</span><br><span class="line">Events:                    &lt;none&gt;</span><br></pre></td></tr></table></figure><h2 id="给Ingress配置ssl"><a href="#给Ingress配置ssl" class="headerlink" title="给Ingress配置ssl"></a>给Ingress配置ssl</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">hoteler-namespace</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">cert-manager.io/cluster-issuer:</span> <span class="string">letsencrypt</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">hoteler-web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">secretName:</span> <span class="string">hoteler-web-tls</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hoteler.damingerdai.com</span></span><br><span class="line">  <span class="comment"># ingressClassName: traefik</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">hoteler.damingerdai.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">hoteler-web</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>改动如下：</p><ol><li>添加annotations的metadata</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">annotations:</span></span><br><span class="line">  <span class="attr">cert-manager.io/cluster-issuer:</span> <span class="string">letsencrypt</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加tls</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tls:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">secretName:</span> <span class="string">hoteler-web-tls</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hoteler.damingerdai.com</span></span><br></pre></td></tr></table></figure><p>secretName可以按照自己的习惯来取，cert-manager会自动创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f ingress.yaml -n hoteler-namespace</span><br><span class="line">$ kubectl get ingress -n hoteler-namespace</span><br><span class="line">hoteler-web                 &lt;none&gt;   hoteler.damingerdai.com         204.44.75.77   80, 443   115d</span><br></pre></td></tr></table></figure><p>可以看到hoteler-web除了80端口，还新加了443端口</p><h2 id="查看证书状态"><a href="#查看证书状态" class="headerlink" title="查看证书状态"></a>查看证书状态</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubectl describe certificate -n hoteler-namespace</span></span><br><span class="line">...</span><br><span class="line">Status:</span><br><span class="line">  Conditions:</span><br><span class="line">    Last Transition Time:  2022-09-03T12:27:15Z</span><br><span class="line">    Message:               Certificate is up to date and has not expired</span><br><span class="line">    Observed Generation:   1</span><br><span class="line">    Reason:                Ready</span><br><span class="line">    Status:                True</span><br><span class="line">    Type:                  Ready</span><br><span class="line">  Not After:               2022-12-02T11:27:13Z</span><br><span class="line">  Not Before:              2022-09-03T11:27:14Z</span><br><span class="line">  Renewal Time:            2022-11-02T11:27:13Z</span><br><span class="line">  Revision:                1</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason     Age   From                                       Message</span><br><span class="line">  ----    ------     ----  ----                                       -------</span><br><span class="line">  Normal  Issuing    30m   cert-manager-certificates-trigger          Issuing certificate as Secret does not exist</span><br><span class="line">  Normal  Generated  30m   cert-manager-certificates-key-manager      Stored new private key in temporary Secret resource &quot;hoteler-web-tls-pfxrp&quot;</span><br><span class="line">  Normal  Requested  30m   cert-manager-certificates-request-manager  Created new CertificateRequest resource &quot;hoteler-web-tls-v24f6&quot;</span><br><span class="line">  Normal  Issuing    29m   cert-manager-certificates-issuing          The certificate has been successfully issued</span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/back-end/hoteler-web-certificate.png" alt="Hoteler Web"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://www.frytea.com/technology/k8s/k3s-uses-letsencrypt-and-traefik-to-deploy-the-https/">k3s 使用 Letsencrypt 和 Traefik 完成 https 入口部署</a></li><li><a href="http://t.zoukankan.com/dream2true-p-13064701.html">K3S与Docker常用命令</a></li><li><a href="https://cert-manager.io/docs/tutorials/acme/nginx-ingress/">Securing NGINX-ingress</a></li><li><a href="https://github.com/cert-manager/cert-manager/issues/2319">Documenting “context deadline exceeded” errors relating to the webhook</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> ssl </tag>
            
            <tag> k3s </tag>
            
            <tag> letsencrypt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Ingress上配置ssl证书</title>
      <link href="/2022/06/18/back-end/add-ssl-for-ingress/"/>
      <url>/2022/06/18/back-end/add-ssl-for-ingress/</url>
      
        <content type="html"><![CDATA[<h1 id="给Ingress上配置ssl证书"><a href="#给Ingress上配置ssl证书" class="headerlink" title="给Ingress上配置ssl证书"></a>给Ingress上配置ssl证书</h1><h2 id="创建secret"><a href="#创建secret" class="headerlink" title="创建secret"></a>创建secret</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret tls [secretName]  --cert=[pem文件路径] --key=[key文件路径] --namespace [namespace] -o yaml --dry-run=client &gt; ingress-default-cert.yaml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubectl apply -f ingress-default-cert.yaml</span><br></pre></td></tr></table></figure><h2 id="Ingress添加证书"><a href="#Ingress添加证书" class="headerlink" title="Ingress添加证书"></a>Ingress添加证书</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span>  </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">    <span class="attr">name:</span> [<span class="string">ingress-name</span>] </span><br><span class="line">    <span class="attr">namespace:</span> [<span class="string">namespace</span>] <span class="comment"># ingress要和secret在同一个名称空间下 </span></span><br><span class="line">    <span class="attr">annotations:</span> </span><br><span class="line">        <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">traefik</span> </span><br><span class="line">        <span class="attr">traefik.frontend.rule.type:</span> <span class="string">PathPrefixStrip</span> </span><br><span class="line">        <span class="comment"># http 重定向到 https </span></span><br><span class="line">        <span class="attr">ingress.kubernetes.io/ssl-redirect:</span> <span class="string">&quot;True&quot;</span> </span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">    <span class="attr">tls:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">hosts:</span> </span><br><span class="line">            <span class="bullet">-</span> <span class="string">xxxx.xxxx</span> <span class="comment"># 这里是下面要配置https的域名 </span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">xxxx.xxxx</span> <span class="comment"># 这里是下面要配置https的域名 </span></span><br><span class="line">        <span class="attr">secretName:</span> </span><br><span class="line">            [<span class="string">secret-name</span>]<span class="string">:</span> </span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">xxx.xxx.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">            <span class="attr">backend:</span></span><br><span class="line">              <span class="attr">service:</span></span><br><span class="line">                <span class="attr">name:</span> [<span class="string">service-name</span>]</span><br><span class="line">                <span class="attr">port:</span></span><br><span class="line">                  <span class="attr">number:</span> <span class="number">8080</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://mars-tian.github.io/2022/01/10/%E4%B8%BAk8s%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AESSL%E8%AF%81%E4%B9%A6/">为k8s集群配置SSL证书</a></li><li><a href="https://ubisoft-potato.github.io/2019/11/03/k3s-pei-zhi-ingress-shi-yong-ssl-zheng-shu/">k3s配置ingress使用ssl证书</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> ingress </tag>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Angular独立组件简单体验</title>
      <link href="/2022/06/09/front-end/angular-standalone-components-app/"/>
      <url>/2022/06/09/front-end/angular-standalone-components-app/</url>
      
        <content type="html"><![CDATA[<h1 id="Angular独立组件简单体验"><a href="#Angular独立组件简单体验" class="headerlink" title="Angular独立组件简单体验"></a>Angular独立组件简单体验</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Angular 14一项令人兴奋的特性就是Angular的独立组件终于来了。</p><p>在Angular 14中， 开发者可以尝试使用独立组件开发各种组件，但是值得注意的是Angular独立组件的API仍然没有稳定下，将来可能存在一些破坏性更新，所以不推荐在生产环境中使用。</p><h2 id="如何创建一个独立组件"><a href="#如何创建一个独立组件" class="headerlink" title="如何创建一个独立组件"></a>如何创建一个独立组件</h2><p>对于已有的组件，我们可以在<code>@Component()</code>中添加<em>standalone: true</em>的标识，然后我们可以在没有<code>@NgModule()</code>的情况下直接使用<code>imports</code>导入其他模块了。<br>如果是新建组件，可以使用<code>ng generate component &lt;name&gt; --standalone</code>的命令，直接创建一个独立组件, 例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng generate component button-list --standalone</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Component</span>(&#123;</span><br><span class="line">  <span class="attr">selector</span>: <span class="string">&#x27;app-button-list&#x27;</span>,</span><br><span class="line">  <span class="attr">standalone</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">imports</span>: [</span><br><span class="line">    <span class="title class_">CommonModule</span>,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">templateUrl</span>: <span class="string">&#x27;./button-list.component.html&#x27;</span>,</span><br><span class="line">  <span class="attr">styleUrls</span>: [<span class="string">&#x27;./button-list.component.scss&#x27;</span>]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">ButtonListComponent</span> implements <span class="title class_">OnInit</span></span><br></pre></td></tr></table></figure><h2 id="在独立组件中导入已有的模块"><a href="#在独立组件中导入已有的模块" class="headerlink" title="在独立组件中导入已有的模块"></a>在独立组件中导入已有的模块</h2><p>我们可以在<code>imports</code>中添加已有的模块，以<code>MatButtonModule</code>为例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">imports: [</span><br><span class="line">    CommonModule,</span><br><span class="line">    MatButtonModule,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>这样子我们就可以在<code>ButtonListComponent</code>中使用<code>MatButtonModule</code>的<code>mat-button</code>组件了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">mat-button</span>&gt;</span>Basic<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">mat-button</span> <span class="attr">color</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>Primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">mat-button</span> <span class="attr">color</span>=<span class="string">&quot;accent&quot;</span>&gt;</span>Accent<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">mat-button</span> <span class="attr">color</span>=<span class="string">&quot;warn&quot;</span>&gt;</span>Warn<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">mat-button</span> <span class="attr">disabled</span>&gt;</span>Disabled<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">mat-button</span> <span class="attr">href</span>=<span class="string">&quot;https://damingerdai.github.io&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="/images/angular-standalone-components-app/angular-standalone-components-app-button-list.png" alt="angular-standalone-components-app-button-list"></p><h2 id="使用独立组件启动Angular应用"><a href="#使用独立组件启动Angular应用" class="headerlink" title="使用独立组件启动Angular应用"></a>使用独立组件启动Angular应用</h2><p>第一步， 将<code>AppComponent</code>设置为独立组件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Component</span>(&#123;</span><br><span class="line">  <span class="attr">selector</span>: <span class="string">&#x27;app-root&#x27;</span>,</span><br><span class="line">  <span class="attr">templateUrl</span>: <span class="string">&#x27;./app.component.html&#x27;</span>,</span><br><span class="line">  <span class="attr">styleUrls</span>: [<span class="string">&#x27;./app.component.scss&#x27;</span>],</span><br><span class="line">  <span class="attr">standalone</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">AppComponent</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步，将<code>AppModule</code>的imports中的导入的模块加入到<code>AppComponent</code>的imports中,但是有两个模块例外： <code>BrowserModule</code>和<code>BrowserAnimationsModule</code>。</p><p>如果导入的话，可能会导致** <code>BrowserModule</code> have already been loaded. If you need access to common directives such as NgIf and NgFor, import the <code>CommonModule</code> instead.**的问题：</p><p><img src="/images/angular-standalone-components-app/angular-app-commonent-browser-module-error.png" alt="angular-app-commonent-browser-module-error"></p><p>第三步，删除<code>app.module.ts</code>文件</p><p>最后一步， 将<code>main.ts</code>中的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; platformBrowserDynamic &#125; <span class="keyword">from</span> <span class="string">&#x27;@angular/platform-browser-dynamic&#x27;</span>;</span><br><span class="line"><span class="title function_">platformBrowserDynamic</span>().<span class="title function_">bootstrapModule</span>(<span class="title class_">AppModule</span>)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err));</span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">bootstrapApplication</span>(<span class="title class_">AppComponent</span>).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err));</span><br></pre></td></tr></table></figure><p>这样子我们就实现了使用独立组件启动Angular组件了。</p><h2 id="为独立组件配置路由"><a href="#为独立组件配置路由" class="headerlink" title="为独立组件配置路由"></a>为独立组件配置路由</h2><p>我这里分别有三个独立组件： <code>HomeComponent</code>, <code>ButtonListComponent</code> 和 <code>ChipListComponent</code>，</p><p>然后在<code>main.ts</code>中创建<strong>ROUTES</strong>对象</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">ROUTES</span>: <span class="title class_">Route</span>[] = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">pathMatch</span>: <span class="string">&#x27;full&#x27;</span>,</span><br><span class="line">    <span class="attr">redirectTo</span>: <span class="string">&#x27;home&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">HomeComponent</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;button&#x27;</span>,</span><br><span class="line">    <span class="attr">loadComponent</span>: <span class="function">() =&gt;</span></span><br><span class="line">      <span class="keyword">import</span>(<span class="string">&#x27;./app/button-list/button-list.component&#x27;</span>).<span class="title function_">then</span>(</span><br><span class="line">        <span class="function">(<span class="params">mod</span>) =&gt;</span> mod.<span class="property">ButtonListComponent</span></span><br><span class="line">      ),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;chip&#x27;</span>,</span><br><span class="line">    <span class="attr">loadComponent</span>: <span class="function">() =&gt;</span></span><br><span class="line">      <span class="keyword">import</span>(<span class="string">&#x27;./app/chip-list/chip-list.component&#x27;</span>).<span class="title function_">then</span>(</span><br><span class="line">        <span class="function">(<span class="params">mod</span>) =&gt;</span> mod.<span class="property">ChipListComponent</span></span><br><span class="line">      ),</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>其中<code>ButtonListComponent</code>和<code>ChipListComponent</code>使用<code>loadComponent</code>去实现路由懒加载。</p><p>最后在<code>bootstrapApplication</code>的第二个参数中使用<code>providers</code>注册<code>RouterModule</code>好了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">bootstrapApplication</span>(<span class="title class_">AppComponent</span>, &#123;</span><br><span class="line">  <span class="attr">providers</span>: [</span><br><span class="line">    importProvidersFrom(<span class="title class_">RouterModule</span>.<span class="title function_">forRoot</span>([...<span class="variable constant_">ROUTES</span>])),</span><br><span class="line">  ],</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err));</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="/images/angular-standalone-components-app/angular-standalone-components-app-button-list.gif" alt="angular-standalone-components-app-button-list"></p><h2 id="配置依赖注入"><a href="#配置依赖注入" class="headerlink" title="配置依赖注入"></a>配置依赖注入</h2><p>当我们想要启动Angular应用的时候，可能需要注入一些值或者服务。 在<code>bootstrapApplication</code>, 我们可以通过<code>providers</code>来注册值或者服务。</p><p>比如，我有一个获取图片的url，需要注入到<code>PhotoService</code>中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">bootstrapApplication</span>(<span class="title class_">AppComponent</span>, &#123;</span><br><span class="line">  <span class="attr">providers</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">provide</span>: <span class="string">&#x27;photoUrl&#x27;</span>,</span><br><span class="line">      <span class="attr">useValue</span>: <span class="string">&#x27;https://picsum.photos&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="attr">provide</span>: <span class="title class_">PhotosService</span>, <span class="attr">useClass</span>: <span class="title class_">PhotosService</span> &#125;,</span><br><span class="line">    importProvidersFrom(<span class="title class_">RouterModule</span>.<span class="title function_">forRoot</span>([...<span class="variable constant_">ROUTES</span>])),</span><br><span class="line">    importProvidersFrom(<span class="title class_">HttpClientModule</span>)</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>PhotoService</code>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Injectable</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">PhotosService</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span></span><br><span class="line"><span class="params">    @Inject(<span class="string">&#x27;photoUrl&#x27;</span>) private photoUrl: string,</span></span><br><span class="line"><span class="params">    private http: HttpClient</span></span><br><span class="line"><span class="params">  </span>) &#123; &#125;</span><br><span class="line"></span><br><span class="line">  public <span class="title function_">getPhotoUrl</span>(<span class="attr">i</span>: number): string &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.photoUrl&#125;</span>/200/300?random=<span class="subst">$&#123;i&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>本文所使用的<a href="https://github.com/damingerdai/angular-standalone-components-app">源代码</a></p><p>线上<a href="https://damingerdai.github.io/angular-standalone-components-app/">demo</a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://blog.angular.io/angular-v14-is-now-available-391a6db736af">Angular v14 is now available!</a></li><li><a href="https://angular.io/guide/standalone-components">Getting started with standalone components</a></li><li><a href="https://material.angular.io/">Angular Material</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> angular </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>drone + gogs + docker实现持续自动化部署</title>
      <link href="/2022/05/15/software/install/drone-gogs-docker-devops/"/>
      <url>/2022/05/15/software/install/drone-gogs-docker-devops/</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>我们使用docker-compose来安装gogs和drone。</p><p>首先我们准备数据库，gogs支持mysql，postgres, sqlite, sql server和TiDB。<br>这里我们选择使用postgre:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:14.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5432</span><span class="string">:5432</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./postgres:/var/lib/postgresql/data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_USER:</span> <span class="string">postgres</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">      <span class="attr">POSTGRES_DB:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ci-network</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">ci-network:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>创建docker网络并启动数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker network create ci-network (仅第一次运行)</span><br><span class="line"></span><br><span class="line">docker-compose up postgres</span><br></pre></td></tr></table></figure><h2 id="Gogs"><a href="#Gogs" class="headerlink" title="Gogs"></a>Gogs</h2><p><code>Gogs</code>是一款极易搭建的自助 Git 服务, 使用go开发，可以很方便的在任何go支持的平台上部署</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在docker-compose.yaml上添加gogs</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gogs:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">gogs/gogs:0.12.6</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">&#x27;gogs&#x27;</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;10022:22&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;13000:3000&#x27;</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./gogs:/data</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gogs/gogs</span></span><br><span class="line">  <span class="attr">depends_on:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">  <span class="attr">networks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ci-network</span></span><br></pre></td></tr></table></figure><p>gogs使用22端口提供ssh， 使用3000提供web页面服务，这里我们分别映射到本地的10022和13000端口</p><p>启动gogs服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up gogs</span><br></pre></td></tr></table></figure><p>使用浏览器打开<a href="http://127.0.0.1:13000/install">http://127.0.0.1:13000/install</a></p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-install-ui.png" alt="gogs的install页面"></p><p>设置postgresql数据库，</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-install-ui-postgreq-settings.png" alt="gogs的install的postgreql设置"></p><p>设置应用基本设置</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-install-ui-application-settings.png" alt="gogs的install的应用设置"></p><p>跳过邮件服务设置， 关闭·启用验证码服务,</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-install-ui-email-settings.png" alt="gogs的install的邮件设置"></p><p>设置管理员账号,</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-install-ui-admin-settings.png" alt="gogs的install的管理员设置"></p><p>最后我们可以点击安装按钮了，浏览器将会跳转到<code>http://host.docker.internal:3000</code>, 但是我们其实不能访问这个链接，不过不用担心，可以使用<a href="http://127.0.0.1:13000/">http://127.0.0.1:13000</a></p><h3 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h3><p>在<a href="http://127.0.0.1:13000/user/settings/ssh">http://127.0.0.1:13000/user/settings/ssh</a>页面上设置你的SSH 密钥：</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-web-ui-ssh-settings.png" alt="gogs的SSH密钥配置"><br><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-web-ui-ssh-settings-result.png" alt="gogs的SSH密钥配置"></p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-web-ui-create-new-repo-1.png" alt="gogs的创建仓库"><br><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-web-ui-create-new-repo-2.png" alt="gogs的创建仓库"><br><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-web-ui-create-new-repo-3.png" alt="gogs的创建仓库"></p><p>这里我使用我的<a href="https://github.com/damingerdai/hoteler-web">hoteler-web</a>作为demo：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/damingerdai/hoteler-web.git</span><br><span class="line">git remote add gogs ssh://git@localhost:10022/daming/hoteler-web.git</span><br><span class="line">git push gogs master</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-web-ui-create-new-repo-4.png" alt="gogs的创建仓库"></p><p>换一个目录, 把hoteler-web拉到本地，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh://git@localhost:10022/daming/hoteler-web.git</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-web-ui-hoteler-web-clone-termial.png" alt="gogs的hoteler-web仓库"></p><h2 id="Drone"><a href="#Drone" class="headerlink" title="Drone"></a>Drone</h2><p><code>Drone</code>是一个持续集成和持续交付的平台，可以与Docker完美集成。相对于<code>Jenkins</code>来说更加轻量，可以配合轻量的Gogs来实现持续集成</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">drone-server:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">drone/drone:2.11</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">drone</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10081</span><span class="string">:80</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">9000</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./drone:/var/lib/drone/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_OPEN=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_SERVER_HOST=drone-server</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_SERVER_PROTO=http</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_LOGS_TRACE=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_LOGS_DEBUG=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_GOGS=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_GOGS_SKIP_VERIFY=false</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_GOGS_SERVER=http://host.docker.internal:13000</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_PROVIDER=gogs</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_DATABASE_DATASOURCE=/var/lib/drone/drone.sqlite</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_DATABASE_DRIVER=sqlite3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_RPC_SECRET=MWckgvhjqg4E3eQ0psgZX4iNCxoQiyU4LLvO4eXFFuHtrTkIy8vwcAc3erB5f9reM</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_SECRET=ALQU2M0KdptXUdTPKcEw</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_USER_CREATE=username:daming,admin:true</span></span><br><span class="line">  <span class="attr">networks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ci-network</span></span><br><span class="line"><span class="attr">drone-runner-docker:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">drone/drone-runner-docker:1.8.1</span></span><br><span class="line">  <span class="attr">depends_on:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">drone-server</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./pipe/docker_engine://./pipe/docker_engine</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">13001</span><span class="string">:3000</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_RPC_HOST=drone-server</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_RPC_PROTO=http</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_RPC_SECRET=MWckgvhjqg4E3eQ0psgZX4iNCxoQiyU4LLvO4eXFFuHtrTkIy8vwcAc3erB5f9reM</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_LOGS_TRACE=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_LOGS_DEBUG=true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_RUNNER_CAPCAITY=2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_RUNNER_NAME=docker-runner</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">DRONE_SECRET=ALQU2M0KdptXUdTPKcEw</span></span><br><span class="line">  <span class="attr">networks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ci-network</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up drone-server drone-runner-docker</span><br></pre></td></tr></table></figure><p>在浏览器中打开<a href="http://127.0.0.1:10081/">http://127.0.0.1:10081</a>。</p><p>drone没有自己的账号信息, 直接使用gogs的账号信息就好了</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/drone-ui-login.png" alt="drone登录页面"><br><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/drone-ui-register.png" alt="drone注册页面"></p><p>激活<code>hoteler-web</code>仓库</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/drone-ui-hoteler-web-dashboard.png" alt="drone的hoteler-web"><br><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/drone-ui-hoteler-web-active-repository.png" alt="drone的hoteler-web"></p><p>我们需要设置<code>Project Settings</code>中开启<em>Truste</em>配置：</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/drone-ui-hoteler-web-active-repository-trusted.png" alt="drone的hoteler-web"></p><h3 id="配置drone-yml"><a href="#配置drone-yml" class="headerlink" title="配置drone.yml"></a>配置drone.yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">pipeline</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">hoteler-web</span></span><br><span class="line"></span><br><span class="line"><span class="attr">steps:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">frontend</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">node:16</span></span><br><span class="line">    <span class="attr">commands:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">yarn</span> <span class="string">install</span> <span class="string">&amp;&amp;</span> <span class="string">yarn</span> <span class="string">build</span></span><br><span class="line"><span class="attr">trigger:</span></span><br><span class="line">  <span class="attr">branch:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>并提交到gogs仓库里。</p><h3 id="配置gogs的wehook"><a href="#配置gogs的wehook" class="headerlink" title="配置gogs的wehook"></a>配置gogs的wehook</h3><p>在浏览器中进入<a href="http://127.0.0.1:13000/daming/hoteler-web/settings/hooks/1">http://127.0.0.1:13000/daming/hoteler-web/settings/hooks/1</a></p><p>我们把<code>http://drone-server/hook</code>改成<code>http://host.docker.internal:10081/hook</code>, 点击更新web钩子的按钮。</p><p>最后我们可以点击测试推送的按钮：</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/gogs-web-hook-test.png" alt="drone的webhook测试"></p><p>在drone我们可以看到：</p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/software/drone-ci-cd-result.png" alt="drone的webhook结果"></p><blockquote><p>第一次ci&#x2F;cd可能是网络问题，导致开启<code>node:16</code>镜像太慢了，上面的截图其实是第二次的结果</p></blockquote><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li><p>drone无法clone的gogs的地址问题<br>在<code>gogs/gogs/conf/app.ini</code>中将<em>EXTERNAL_URL</em>修改为*<a href="http://host.docker.internal:13000/*%EF%BC%88%E4%BB%85%E4%BB%85%E4%BD%9C%E4%B8%BA%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8%EF%BC%89">http://host.docker.internal:13000/*（仅仅作为本地使用）</a></p></li><li><p>容器无法访问localhost<br>windows或者mac用户可以使用host.docker.internal，其他系统尚未测试过。</p></li></ol><h2 id="docker-compose-yaml"><a href="#docker-compose-yaml" class="headerlink" title="docker-compose.yaml"></a>docker-compose.yaml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:14.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5432</span><span class="string">:5432</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./postgres:/var/lib/postgresql/data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_USER:</span> <span class="string">postgres</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">      <span class="attr">POSTGRES_DB:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ci-network</span></span><br><span class="line">  <span class="attr">gogs:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gogs/gogs:0.12.6</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">&#x27;gogs&#x27;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;10022:22&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;13000:3000&#x27;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./gogs:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">gogs/gogs</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ci-network</span></span><br><span class="line">  <span class="attr">drone-server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">drone/drone:2.11</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">drone</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">10081</span><span class="string">:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./drone:/var/lib/drone/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_OPEN=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_SERVER_HOST=drone-server</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_SERVER_PROTO=http</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_LOGS_TRACE=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_LOGS_DEBUG=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GOGS=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GOGS_SKIP_VERIFY=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GOGS_SERVER=http://host.docker.internal:13000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_PROVIDER=gogs</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DATABASE_DATASOURCE=/var/lib/drone/drone.sqlite</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DATABASE_DRIVER=sqlite3</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_SECRET=MWckgvhjqg4E3eQ0psgZX4iNCxoQiyU4LLvO4eXFFuHtrTkIy8vwcAc3erB5f9reM</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_SECRET=ALQU2M0KdptXUdTPKcEw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_USER_CREATE=username:daming,admin:true</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ci-network</span></span><br><span class="line">  <span class="attr">drone-runner-docker:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">drone/drone-runner-docker:1.8.1</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">drone-server</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./pipe/docker_engine://./pipe/docker_engine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">13001</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_HOST=drone-server</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_PROTO=http</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_SECRET=MWckgvhjqg4E3eQ0psgZX4iNCxoQiyU4LLvO4eXFFuHtrTkIy8vwcAc3erB5f9reM</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_LOGS_TRACE=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_LOGS_DEBUG=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RUNNER_CAPCAITY=2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RUNNER_NAME=docker-runner</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_SECRET=ALQU2M0KdptXUdTPKcEw</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ci-network</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">ci-network:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://gogs.io/">gogs官网</a></li><li><a href="https://www.cnblogs.com/shanfeng1000/p/14622319.html">gogs安装与说明(docker)</a></li><li><a href="https://zhuanlan.zhihu.com/p/108842332">Drone+Gogs+docker实现持续自动化部署</a></li><li><a href="https://kanda.me/2019/03/06/building-ci-cd-system-by-drone/">使用drone和gogs搭建自己的CI&#x2F;CD系统</a></li><li><a href="https://zhuanlan.zhihu.com/p/81904099">Setup CI&#x2F;CD service with gogs &amp; registry &amp; drone</a></li><li><a href="https://www.cnblogs.com/manastudent/p/15938616.html">Drone 教程</a></li><li><a href="https://my.oschina.net/keking/blog/3053769">轻量快速的CI工具Drone快速入门</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> drone </tag>
            
            <tag> gogs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K3S安装的时候默认使用docker</title>
      <link href="/2022/05/15/software/k8s/k3s-install-with-docker/"/>
      <url>/2022/05/15/software/k8s/k3s-install-with-docker/</url>
      
        <content type="html"><![CDATA[<h1 id="K3S安装的时候默认使用docker"><a href="#K3S安装的时候默认使用docker" class="headerlink" title="K3S安装的时候默认使用docker"></a>K3S安装的时候默认使用docker</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>k8s在1.20之后就弃用docker的运行时了，所以k3s也开始默认使用<a href="https://containerd.io/">containerd</a>作为默认的运行时。<br>这导致一个问题。那就是k3s无法访问本地docker镜像。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>一种解决方案就是使用containerd的镜像，而不是docker。还有一种方式是在安装时就指定k3s使用docker作为运行环境。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/k3s-uninstall.sh</span><br><span class="line">curl -sfL https://get.k3s.io | sh -s - server --docker</span><br></pre></td></tr></table></figure><p>国内用户，可以使用以下方法加速安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn sh -s - server --docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> docker </tag>
            
            <tag> k3s </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用github action推送到docker的镜像仓库</title>
      <link href="/2022/04/16/back-end/github-action-push-docker-image-to-github-packages/"/>
      <url>/2022/04/16/back-end/github-action-push-docker-image-to-github-packages/</url>
      
        <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>请在github的<a href="https://github.com/settings/tokens">设置页面</a>上创建一个token，并确保有以下的权限：</p><ul><li>repo</li><li>read:packages</li><li>write:packages</li></ul><blockquote><p>请保存好该token，因为github将隐藏该值</p></blockquote><p>在github的仓库的secrets设置页面(例：<a href="https://github.com/%7Byour_username%7D/%7Byour_repository_name%7D/settings/secrets/actions)%E9%87%8C%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BAGHCR_PAT%E7%9A%84secrets">https://github.com/{your_username}/{your_repository_name}/settings/secrets/actions)里创建一个名为GHCR_PAT的secrets</a></p><p><img src="https://raw.githubusercontent.com/damingerdai/damingerdai.github.io/master/assets/back-end/github-action-push-docker-image-to-github-packages-1.png" alt="secrets设置页面"></p><h1 id="创建GitHub-Action文件"><a href="#创建GitHub-Action文件" class="headerlink" title="创建GitHub Action文件"></a>创建GitHub Action文件</h1><p>在<code>.github/workflow</code>中创建一个<code>build-and-publish.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">Publish</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [ <span class="string">master</span> ]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build-and-push-docker-image:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Docker</span> <span class="string">image</span> <span class="string">and</span> <span class="string">push</span> <span class="string">to</span> <span class="string">repositories</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">code</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Docker</span> <span class="string">Buildx</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">buildx</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/setup-buildx-action@v1</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Login</span> <span class="string">to</span> <span class="string">Github</span> <span class="string">Packages</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/login-action@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">registry:</span> <span class="string">ghcr.io</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.actor</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GHCR_PAT</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">image</span> <span class="string">and</span> <span class="string">push</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Container</span> <span class="string">Registry</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/build-push-action@v2</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">docker_build</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">          <span class="attr">tags:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            # 将usernmae和repository改成你自己的github账号和仓库名</span></span><br><span class="line"><span class="string">            ghcr.io/&#123;usernmae&#125;/&#123;repository&#125;:$&#123;&#123; github.sha &#125;&#125;</span></span><br><span class="line"><span class="string">            # 当且只有运行在master分支时才需要推送到github容器仓库</span></span><br><span class="line"><span class="string"></span>          <span class="attr">push:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.ref</span> <span class="string">==</span> <span class="string">&#x27;refs/heads/master&#x27;</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Image</span> <span class="string">digest</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">echo</span> <span class="string">$&#123;&#123;</span> <span class="string">steps.docker_build.outputs.digest</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>默认推送的镜像是私有，想要公开，可以在<br><code>https://github.com/users/&#123;your_username&#125;/packages/container/&#123;your_repository_name&#125;/settings</code>下面的Danger Zone中的Change package visibility设置成<em>public</em>还是<em>private</em>。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="https://event-driven.io/en/how_to_buid_and_push_docker_image_with_github_actions/">How to build and push Docker image with GitHub actions?</a></li><li><a href="https://github.com/damingerdai/hoteler/blob/master/.github/workflows/build-and-publish.yml">Hoteler</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> github action </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两种在Minikube中运行本地Docker镜像的简单方式</title>
      <link href="/2022/03/23/back-end/two-easy-ways-to-use-local-docker-images-in-minikube/"/>
      <url>/2022/03/23/back-end/two-easy-ways-to-use-local-docker-images-in-minikube/</url>
      
        <content type="html"><![CDATA[<h1 id="两种在Minikube中运行本地Docker镜像的简单方式"><a href="#两种在Minikube中运行本地Docker镜像的简单方式" class="headerlink" title="两种在Minikube中运行本地Docker镜像的简单方式"></a>两种在Minikube中运行本地Docker镜像的简单方式</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文将分享两种在Minikube中运行本地Docker镜像的简单方式</p><p><img src="https://miro.medium.com/max/1400/1*Q8RckeLvx7rVFNPTHzx21A.png" alt="Kubernetes"></p><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul><li>安装并运行<a href="https://www.docker.com/get-started">Docker</a></li><li>安装并运行<a href="https://minikube.sigs.k8s.io/docs/start/">Minikube</a></li><li><a href="https://kubernetes.io/docs/tasks/tools/">安装kubectl</a></li></ul><h2 id="你将学到的知识"><a href="#你将学到的知识" class="headerlink" title="你将学到的知识"></a>你将学到的知识</h2><p>本文将教会大家如何在Minikube中使用本地的Docker镜像。因为Kubernetes默认从注册表中提取镜像，所以Kubernetes一般是不会使用本地镜像，并且在生产环境中也不应该使用本地镜像。但是，如果我们可以很轻松的使用本地镜像，而不是每次都需要将这些镜像推送到远程的注册表、登录远程注册表并在本地电脑中重新拉取，那么使用本地镜像将十分便利。</p><p>和往常一样，我在github中准备了一个<a href="https://github.com/Abszissex/medium-local-docker-image-minikube">仓库</a>, 方便大家查看完成的代码库，并且可以按照本文描述的步骤进行操作。</p><h2 id="Demo介绍"><a href="#Demo介绍" class="headerlink" title="Demo介绍"></a>Demo介绍</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/</span><br><span class="line">|- app/</span><br><span class="line">  |- Dockerfile</span><br><span class="line">  |- index.js</span><br><span class="line">  |- package.json</span><br><span class="line">|- deployment.yaml</span><br></pre></td></tr></table></figure><p>在上面的文件夹结构中，我将重点介绍将在本文中使用的重点文件：</p><ul><li><p><strong>app&#x2F;Dockerfile</strong> 用于构建包含一个Node.js Web 服务器的本地Docker镜像的Dockerfile，我们将其部署到Minikube</p></li><li><p><strong>app&#x2F;index.js</strong> Node.js Web 服务器的应用程序代码</p></li><li><p><em><strong>app&#x2F;package.json</strong> 我们Node.js Web 服务器的依赖。在本文中，只使用了</em>*express**，一个用于搭建Web服务器的Nodejs库</p></li><li><p><strong>deployment.yaml</strong> 在Kubernetes中运行Node.js Web 服务器的Deployment配置</p></li></ul><p><strong>app</strong>文件夹中的实际内容和本文无关。 我仅仅是提供一个demo方便接下来的教程讲解，当然使用你自己的demo也是可以的。如果你想要使用<strong>app</strong>这个应用，请注意服务器将在容器内部中监听8080端口。</p><h2 id="Deployment配置"><a href="#Deployment配置" class="headerlink" title="Deployment配置"></a>Deployment配置</h2><p><strong>deployment.yaml</strong>的内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myapp</span><br><span class="line">  labels:</span><br><span class="line">    name: myapp</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      name: myapp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        name: myapp</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: myapp</span><br><span class="line">          image: pz/demo</span><br><span class="line">          imagePullPolicy: Never</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8080</span><br></pre></td></tr></table></figure><p>我们需要重点关注的是<strong>imagePullPolicy</strong>和<strong>containerPort</strong>这两个配置</p><p>通过<strong>containerPort</strong>，我们将暴露app正在监听的<em>8080</em>端口，因此我们稍后可以通过浏览器访问<em><a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a></em>去验证是否满足我们预期那样工作。</p><p>更关键的是<strong>imagePullPolicy</strong>。如果你想使用本地Docker镜像，<strong>imagePullPolicy</strong>需要设置成<strong>Never</strong>, 否则， Kubernetes将在注册表中根据你提供的名字来搜素同名镜像。</p><h2 id="构建Dcoker镜像"><a href="#构建Dcoker镜像" class="headerlink" title="构建Dcoker镜像"></a>构建Dcoker镜像</h2><p>为了验证Docker镜像能够按照我们的预期在Kubernetes中运行，让我们来构建并运行。</p><p>首先，我们导航进入<strong>app</strong>目录，然后我们通过<strong>docker build -t pz&#x2F;demo .<strong>构建Docker镜像，通过</strong>-t</strong>参数将镜像名字设置为<strong>pz&#x2F;demo</strong>。</p><p><img src="https://miro.medium.com/max/1400/1*Q-XZFc-_TRrTfwS_-DtHQw.png" alt="docker images"></p><p>当构建完成之后，我们可以通过<strong>docker run -it –rm -p 8080:8080 pz&#x2F;demo</strong>命令来运行容器，并将Docker的8080端口映射的本地的8080端口。接下来，我们可以在浏览器中访问<a href="http://localhost:8080/">localhost:8080</a>。 如果我们可以在浏览器中看到*”Hello World!”*，那么说明我们的容器运行正常。</p><p><img src="https://miro.medium.com/max/1224/1*BrzMRioHmZEaR1km1C0EWA.png" alt="localhost:8080"></p><h2 id="在Minikube中运行本地Docker镜像"><a href="#在Minikube中运行本地Docker镜像" class="headerlink" title="在Minikube中运行本地Docker镜像"></a>在Minikube中运行本地Docker镜像</h2><p>如果你想通过<strong>kubectl apply -f deployment.yaml</strong>命令部署上面的<strong>deployment.yaml</strong>到你的Minikube中，那启动的Pod将找不到你刚刚构建的Docker镜像。</p><p>你可以通过<strong>kubectl logs deployment.apps&#x2F;myapp</strong>命令来检查日志去来验证这个错误的结果。</p><p><img src="https://miro.medium.com/max/1400/1*qGB6vXA3rpRnubXQ9Qf3oQ.png" alt="kubectl logs deployment.apps/myapp"></p><p>上面的日志显示由于Kubernetes拉取不到镜像Pod一直等待重启。这其实是因为Minikube没有方法获取你本地Docker镜像。</p><p>但是幸运的是，有两个简单的命令可以帮助解决这个问题。</p><p>第一种方式是使用<strong>image load</strong>命令， 你可以使用下面的名利将本地Docker镜像从本地电脑中导入Minikube中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">General</span></span><br><span class="line">minikube image load &lt;IMAGE_NAME&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Example</span></span><br><span class="line">minikube image load pz/demo</span><br></pre></td></tr></table></figure><p>在导入完成之后，你可以重启pod。然后你可以发现pod可以正常工作了。</p><p>其实我们还可以变得更简单。以前的方法是你需呀先在本地构建Docker镜像，然后将其移动到Minikube容器中，虽然耗时不多，但是终究还是浪费了不少时间。</p><p>通过使用Minikube的<strong>image build</strong>， 我们可以在Minikube中直接构建镜像：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">General</span></span><br><span class="line">minikube image build -t &lt;IMAGE_NAME&gt; .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Example</span></span><br><span class="line">minikube image build -t pz/demo .</span><br></pre></td></tr></table></figure><p>使用<strong>minikube image build</strong>构建出来的镜像可以在Minikkube中直接访问，同时也不再需要在<strong>minikube image load</strong>中的第二步导入步骤。</p><p>使用以上两种之一的方法，我们可以重新检查一下Deployment的日志：</p><p><img src="https://miro.medium.com/max/1400/1*-yXXk7reYwXm_w3folq6kQ.png" alt="kubectl logs deployment.apps/myapp"></p><p>为了进一步验证一切是否按照我们预期的工作，我们可以使用下面的命令将本地8080端口转发发Deployment的8080端口中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl port-forward deployment/myapp 8080:8080</span><br></pre></td></tr></table></figure><p>重新检查浏览器，我们可以发现本地构建的应用在Minikube中运行正常，🎉🎉🎉</p><p><img src="https://miro.medium.com/max/1224/1*BrzMRioHmZEaR1km1C0EWA.png" alt="localhost:8080"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过本文，你应该能够使用<strong>minikube image load</strong>和<strong>minikube image buildcommand</strong>命令在Minikube中使用本地镜像了.</p><p>更多信息请关注<a href="https://www.linkedin.com/in/pascal-zwikirsch-3a95a1177/">LinkedIn</a></p><h2 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h2><p>原文：<a href="https://medium.com/gitconnected/two-easy-ways-to-use-local-docker-images-in-minikube-cd4dcb1a5379">Two easy ways to use local Docker images in Minikube</a></p><p>译文： <a href="https://damingerdai.github.io/back-end/two-easy-ways-to-use-local-docker-images-in-minikube/">两种在Minikube中运行本地Docker镜像的简单方式</a></p><p>译者：<a href="https://damingerdai.github.io/">大明二代</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> docker </tag>
            
            <tag> minikube </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac版minikube安装笔记</title>
      <link href="/2022/01/17/software/k8s/how-to-install-minkube-on-mac/"/>
      <url>/2022/01/17/software/k8s/how-to-install-minkube-on-mac/</url>
      
        <content type="html"><![CDATA[<h1 id="Mac版minikube安装笔记"><a href="#Mac版minikube安装笔记" class="headerlink" title="Mac版minikube安装笔记"></a>Mac版minikube安装笔记</h1><p><a href="https://minikube.sigs.k8s.io/docs/start/">minikube</a>是一个专注于让Kubernetes更加容易学习和开发的本地Kubernetes。<br>只需要<a href="https://www.docker.com/">Docker</a>或者虚拟机环境，我们便可以通过<code>minikube start</code>就能快速启动Kubernetes。</p><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>安装minikube需要以下要求：</p><ol><li>至少两个CPU</li><li>至少2GB内容</li><li>至少20GB的硬盘空间</li><li>容器或者虚拟机， 比如<a href="https://www.docker.com/">Docker</a>, <a href="https://github.com/moby/hyperkit">Hyperkit</a>, <a href="https://docs.microsoft.com/en-us/windows-server/virtualization/hyper-v/hyper-v-technology-overview">Hyper-V</a>, <a href="https://www.linux-kvm.org/page/Main_Page">KVM</a>, <a href="https://www.parallels.com/">Parallels</a>, <a href="https://podman.io/">Podman</a>, <a href="https://www.virtualbox.org/">VirtualBox</a>, or <a href="https://www.vmware.com/asean/products/fusion.html">VMware Fusion&#x2F;Workstation</a></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>针对macos的x86-64的平台的，可以使用homebrew进行安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install minikube</span><br></pre></td></tr></table></figure><p>如果倾向于二进制文件安装，可以使用下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64</span><br><span class="line">sudo install minikube-darwin-amd64 /usr/local/bin/minikube</span><br></pre></td></tr></table></figure><p>如果是其他平台的操作系统，请看<a href="https://minikube.sigs.k8s.io/docs/start/">minikube的官网教程</a></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>简单来说，可以直接使用<code>minikube start</code>可以直接启动了，但是在国内用于特殊的网络限制，请使用如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minikube start --registry-mirror=https://registry.docker-cn.com  --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure><h3 id="驱动（Drivers）"><a href="#驱动（Drivers）" class="headerlink" title="驱动（Drivers）"></a>驱动（Drivers）</h3><p>通过驱动，minikube可以支持不同的容器和虚拟机。</p><p>针对macos来说，推荐使用docker和hyperkit，我们只需要在上面的命令的基础上添加<code>--vm-driver=docker</code>或者<code>--vm-driver=hyperkit</code>。</p><p>其他平台可以访问<a href="https://minikube.sigs.k8s.io/docs/drivers/">Drivers</a>。</p><h2 id="kubectl"><a href="#kubectl" class="headerlink" title="kubectl"></a>kubectl</h2><p><a href="https://kubernetes.io/docs/tasks/tools/">kubectl</a>是Kubernetes的命令行工具，方便用户通过一些简单的命令去管理Kubernetes。</p><p>如果事先安装了<a href="https://desktop.docker.com/mac/stable/Docker.dmg">docker desktop</a>, 那么<code>kubectl</code>已经安装好了，<br>如果没有安装，那可以使用homebrew安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install kubectl </span><br></pre></td></tr></table></figure><p>其他平台可以访问<a href="https://kubernetes.io/docs/tasks/tools/#kubectl">kubectl</a></p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>新建终端，输入<code>kubectl get po -A</code>,显示以下类似命令就算启动成功了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   coredns-7d89d9b6b8-d462h           0/1     Running   0          20s</span><br><span class="line">kube-system   etcd-minikube                      1/1     Running   0          32s</span><br><span class="line">kube-system   kube-apiserver-minikube            1/1     Running   0          35s</span><br><span class="line">kube-system   kube-controller-manager-minikube   1/1     Running   0          32s</span><br><span class="line">kube-system   kube-proxy-gcbpj                   1/1     Running   0          20s</span><br><span class="line">kube-system   kube-scheduler-minikube            1/1     Running   0          31s</span><br><span class="line">kube-system   storage-provisioner                1/1     Running   0          30s</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>以下是本文撰写过程中的参考资料：</p><ol><li><a href="https://minikube.sigs.k8s.io/docs/start/">minikube start</a></li><li><a href="https://kubernetes.io/docs/tasks/tools/#kubectl">kubectl</a></li><li><a href="https://damingerdai.github.io/software/k8s/how-to-install-minkube/">Minkube安装笔记</a></li><li><a href="https://developer.aliyun.com/article/221687">Minikube - Kubernetes本地实验环境</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> minikube </tag>
            
            <tag> kubernetes </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年度总结</title>
      <link href="/2021/12/31/summary/2022/"/>
      <url>/2021/12/31/summary/2022/</url>
      
        <content type="html"><![CDATA[<h1 id="2022年度总结"><a href="#2022年度总结" class="headerlink" title="2022年度总结"></a>2022年度总结</h1><p>2022年真的是一个让人难以忘怀的年份，尤其在先后经历了上海封城、老丈人去世、领证结婚。</p><h2 id="疫情"><a href="#疫情" class="headerlink" title="疫情"></a>疫情</h2><p>还记得2020年疫情刚开始的时候，那时侯自己一个人开车回上海，路上的车辆非常少，开车的感觉真的可以说非常爽，完全可以闭着眼开车，反正看不到车，即使进了上海市区。那个时候单纯的想，少则三个月，多则半年，疫情就会自然而然的过去，到时候我们该吃吃该喝喝。虽然这个判断翻车了，但是2021年也是对国内疫情还是比较乐观。但是2022年的上海封城打破了我所有的幻想。我从来没想过上海居然玩砸了“动态清理”，从华亭宾馆开始，上海的疫情持续不断，感染人数死活都下不去。</p><p>3月份我刚搬到南翔就被封控了，但是我刚开始还好，虽然什么吃的都没有，但是只要封控时间到了就能出去买点东西。但遗憾的是，从4月份开始，上海开始静默了，我足足封在家里差不多两个月。我本来是不反对封城的，但是上海市政府真的很让人失望，疫情两年了，市政府似乎没有做好任何相关封城的预案。而且总感觉可能涉及到二十大的高层安排，市政府决策层应该是存在分歧的，并且和医疗系统的人也存在一定的隔阂。由于上层的问题，基层机构出现各种乱七八糟的事儿那也能理解了。</p><p>在经过了白纸运动之后，我们的防疫政策从一个极端走向另外一个极端。我们彻底放开了，让80%以上的人感染了一遍。我不是反对放开，但是我比较反对如此毫无征兆的放开，没有准备好各种的退烧药，没有准备好口罩。</p><h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><p>今年继续做一个<code>web2.5</code>的项目，就是<code>web2.0</code> + <code>区块链</code>，不能算得上正宗的<code>web3.0</code>。其核心就是将部分原来放在数据库的数据放在区块链里。所以我们一般自称为<code>web2.5</code>。</p><p>目前部门想全力押宝·web3·，希望能和审计部门能够做好技术服务，所以未来对区块链的研究大概率是会集中中<code>DeFi(去中心化金融)</code>。对我来说，金融是一个毫无头绪的东西，之前并没有接触过，没有一个良好的业务场景可以让我研究，导致对我来说<code>DeFi</code>可能只是一个比较空泛的名词。</p><p>过去的一年，对以太坊还是比较浅显的，同时将也做了一些简单的demo。总的来说，也算简单的入门学了点皮毛，但是对智能合约的开发还是基本上一窍不通的。希望接下来的一年可以深入研究智能合约，可以独立开发智能合约并部署到一个测试网络。solana也会是一个比较重要的关注方向，但是考虑到solana的东家出点事儿，可能不太会重心在这个方面，不过rust语言还是会尽量深挖一下，这是一个很有挑战性的方向</p><p>今年应该很少写angular了，更多开始写react。从我个人的角度来说，jsx和react hook对写一些组件来说确实是一把利器，但是对于如何做好一个完整的、强大的前端web应用来说，react的生态是不足的，太碎裂了，导致在接手不同的项目的时候总是能看到不同的react写法和工程组织形式。最近在<a href="https://github.com/adcentury/react-mobile-picker">react-mobile-picker</a>做一个<a href="https://github.com/damingerdai/react-mobile-picker">重构</a>。一个方面是想改成通用的monorepo的组织形式，另外一个方面是需要升级核心依赖并使用typescript重写。目前这个工作还在努力中。 angular方面更多的专注于<a href="https://github.com/damingerdai/ngx-dom-confetti">ngx-dom-confetti</a>, 目前仅仅是对<a href="https://www.npmjs.com/package/dom-confetti">dom-confetti</a>的angular封装，将来的计划是参考<a href="https://github.com/angular/components/tree/main/src/material/core/ripple">ripple</a>的代码设计，将来可以好好的重构这个项目。<a href="https://github.com/damingerdai/hoteler-web">hoteler-web</a>是我一直会维护的angular的项目。</p><p>今天在<a href="https://domains.google/">google domains</a>买了个域名，然后尝试使用k3s的ingress部署了[<a href="https://hoteler.damingerdai.com/]%E3%80%82%E6%84%9F%E8%A7%89%E4%BD%BF%E7%94%A8k3s%E9%83%A8%E7%BD%B2%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%9A%84%E5%BA%94%E7%94%A8%E5%9F%BA%E6%9C%AC%E4%B8%8A%E9%97%AE%E9%A2%98%E4%B8%8D%E5%A4%A7%E4%BA%86%E3%80%82[hoteler](https://github.com/damingerdai/hoteler)%E5%B7%B2%E7%BB%8F%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BE%88%E7%A8%B3%E5%AE%9A%E7%9A%84demo%EF%BC%8C%E5%A4%A7%E6%A6%82%E7%8E%87%E6%98%AF%E4%B8%8D%E4%BC%9A%E8%BF%9B%E8%A1%8C%E5%A4%A7%E8%A7%84%E6%A8%A1%E7%9A%84%E9%87%8D%E6%9E%84%E4%BA%86%E3%80%82%E6%89%80%E4%BB%A5%E7%9B%AE%E5%89%8D%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%BE%88%E7%AE%80%E5%8D%95%E7%9A%84%E6%83%B3%E6%B3%95%E9%82%A3%E5%B0%B1%E6%98%AF%E4%BD%BF%E7%94%A8spring">https://hoteler.damingerdai.com/]。感觉使用k3s部署一些简单的应用基本上问题不大了。[hoteler](https://github.com/damingerdai/hoteler)已经是一个很稳定的demo，大概率是不会进行大规模的重构了。所以目前只有一个很简单的想法那就是使用spring</a> cloud进行重写，这个是不太能自己部署到线上环境了，毕竟服务器资源就那么点，跑不起那么多的资源。</p><p>针对golang的话，我目前私下的在做一个关于健康的demo，目前还在开发中，前端使用react，后端使用golang。目前希望在技术上的突破是使用loki做日志管理，Jaeger用于链路追踪，这是1.0的计划。2.0的话（如果有时间的话），希望可以加入区块链的一些元素，至少能做成个·web2.5·。</p><p>今年其实还是探索了很多的技术。比如<a href="https://min.io/">minio</a>, <a href="https://goharbor.io/">harbor</a>, <a href="https://www.drone.io/">drone</a>, <a href="https://gogs.io/">gogs</a>和<a href="https://gitea.io/zh-cn">gitea</a>。</p><h2 id="个人生活"><a href="#个人生活" class="headerlink" title="个人生活"></a>个人生活</h2><p>今天对我最大的事儿就是结婚了，没有比举办婚礼更重要的事儿了。本来由于收到上半年疫情的影响，原来不指望今年结婚的。本来定的日子是明年的正月办酒席，但是丈母娘觉得今年的夏天那么热，冬天一定很会冷，希望我们今年就是把事儿办了。所以婚期提前到11月份举行，本来日子选的好好的，也没啥好纠结的，毕竟妹子是自己谈的。但是明天和意外你永远都不知道哪个先来，我老丈人在婚礼的前两天去世了。在婚礼前的几个礼拜，我老丈人生病了，是便秘导致的肠梗阻。在医院治疗了一段时间本来已经治好了，但是不知道是医院的水平问题还是我老丈人本身的问题，在治疗过程中可能没有控制好糖尿病导致肺部感染， 在icu躺了几天之后终究将抢救无效去世，年仅50岁。在殡仪馆里，我看到同批火化的人中就属我老丈人最年轻。有的时间真的感觉世事无常，国庆节回去的时候，老丈人还好好的，结果才过去一个月不到，人就没了。</p><h2 id="展望未来"><a href="#展望未来" class="headerlink" title="展望未来"></a>展望未来</h2><p>对2023年这个经济判断是真的不太好说，谁也不知道明年会怎么想，我也不敢瞎说，我只能我大概率会重点关注·DeFi·。然后希望能够保住就业，保住现金流。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一次迁移Apollo Server V3的过程</title>
      <link href="/2021/12/15/front-end/log-migrate-apollo-server-v3/"/>
      <url>/2021/12/15/front-end/log-migrate-apollo-server-v3/</url>
      
        <content type="html"><![CDATA[<h1 id="记录一次迁移Apollo-Server-V3的过程"><a href="#记录一次迁移Apollo-Server-V3的过程" class="headerlink" title="记录一次迁移Apollo Server V3的过程"></a>记录一次迁移Apollo Server V3的过程</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://www.apollographql.com/docs/apollo-server/">Apollo Server V3</a>出来也快半年了，是时候把<a href="https://github.com/damingerdai/express-postgres-ts-starter">express-postgres-ts-starter</a>的graphql部分升级了。</p><h2 id="使用dependabot帮助更新版本"><a href="#使用dependabot帮助更新版本" class="headerlink" title="使用dependabot帮助更新版本"></a>使用dependabot帮助更新版本</h2><p><a href="https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/about-dependabot-version-updates">dependabot</a>是一个github的工具(似乎也支持gitlab,但是我不确定)，用于检测repo依赖安全性，同时也可以帮助我定期更新repo的依赖版本。</p><p>这是我的dependabot的配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">version: 2</span><br><span class="line">updates:</span><br><span class="line"> - package-ecosystem: npm</span><br><span class="line">   directory: &#x27;/&#x27;</span><br><span class="line">   schedule:</span><br><span class="line">    interval: weekly</span><br><span class="line">   open-pull-requests-limit: 10</span><br></pre></td></tr></table></figure><h2 id="升级Apollo-Servier所需要依赖"><a href="#升级Apollo-Servier所需要依赖" class="headerlink" title="升级Apollo Servier所需要依赖"></a>升级Apollo Servier所需要依赖</h2><h3 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h3><p><code>Apollo Servier 3</code>仅仅支持nodejsv12以上版本(<code>Apollo Servier 2</code>则只需要nodejsv6以上的支持)。 因此需要升级到nodejs12，推荐使用node14和node16。</p><blockquote><p>我十分推荐使用Linux&#x2F;MAC用户使用<a href="https://github.com/nvm-sh/nvm">nvm</a>,Windows用户使用<a href="https://github.com/coreybutler/nvm-windows">nvm-windows</a>安装、升级node版本。</p></blockquote><h3 id="graphql"><a href="#graphql" class="headerlink" title="graphql"></a>graphql</h3><p><code>Apollo Servier</code>有一个可选依赖<a href="https://www.npmjs.com/package/graphql">graphql</a>(GraphQL JS的核心实现),<code>Apollo Servier 3</code>需要<code>graphql</code> v15.3.0以上的支持。</p><h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><h3 id="GraphQL-Playground"><a href="#GraphQL-Playground" class="headerlink" title="GraphQL Playground"></a>GraphQL Playground</h3><p><code>Apollo Server 2</code>是默认支持<a href="https://github.com/graphql/graphql-playground">GraphQL Playground</a>，我们只需要在构造函数里配置好<em>playground</em>这个字段就好了，但是<code>Apollo Server 3</code>删除了对GraphQL Playgroun的默认支持，转而推荐在非生产环境中使用<a href="https://www.apollographql.com/blog/announcement/platform/apollo-sandbox-an-open-graphql-ide-for-local-development/">Apollo Sandbox</a>。</p><p>不过我们还是可以重新配置<code>GraphQL Playground</code>的。</p><p>如果之前是使用<code>new ApolloServer(&#123;playground: boolean&#125;)</code>的类似方式配置<code>GraphQL Playground</code>，那么可以</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApolloServerPluginLandingPageGraphQLPlayground</span>,</span><br><span class="line">         <span class="title class_">ApolloServerPluginLandingPageDisabled</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;apollo-server-core&#x27;</span>;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">ApolloServer</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span></span><br><span class="line">      ? <span class="title class_">ApolloServerPluginLandingPageDisabled</span>()</span><br><span class="line">      : <span class="title class_">ApolloServerPluginLandingPageGraphQLPlayground</span>(),</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果之前是使用<code>new ApolloServer(&#123;playground: playgroundOptions&#125;)</code>的类似方式配置<code>GraphQL Playground</code>，那么可以使用:</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ApolloServerPluginLandingPageGraphQLPlayground</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;apollo-server-core&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> playgroundOptions = &#123;</span><br><span class="line">    <span class="comment">// 仅做参考</span></span><br><span class="line">    <span class="attr">settings</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;editor.theme&#x27;</span>: <span class="string">&#x27;dark&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;editor.cursorShape&#x27;</span>: <span class="string">&#x27;line&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">ApolloServer</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title class_">ApolloServerPluginLandingPageGraphQLPlayground</span>(playgroundOptions),</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="tracing"><a href="#tracing" class="headerlink" title="tracing"></a>tracing</h3><p>在<code>Apollo Server 2</code>中，构造函数的参数提供<em>tracing</em>布尔字段，用于开启基于(apollo-tracing)[<a href="https://www.npmjs.com/package/apollo-tracing]%E8%B7%9F%E8%B8%AA%E6%9C%BA%E5%88%B6%EF%BC%8C%E4%BD%86%E6%98%AF%E5%BE%88%E9%81%97%E6%86%BE%EF%BC%8C%E5%9C%A8%60Apollo">https://www.npmjs.com/package/apollo-tracing]跟踪机制，但是很遗憾，在`Apollo</a> Server 3<code>中，*tracing*已经被删除了，，，</code>apollo-tracing&#96;也已经被废弃了，如果一定要使用，可以：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">ApolloServer</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;apollo-tracing&#x27;</span>).<span class="title function_">plugin</span>()</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>不过值得注意的是，该解决方案没有经过严格测试，可能存在bug。</p></blockquote><h3 id="You-must-await-server-start-before-calling-server-applyMiddleware"><a href="#You-must-await-server-start-before-calling-server-applyMiddleware" class="headerlink" title="You must await server.start() before calling server.applyMiddleware()"></a>You must <code>await server.start()</code> before calling <code>server.applyMiddleware()</code></h3><p>在<code>Apollo Server v2.22</code>中提供了_server.start()_的方法，其目的是为了方便集成非serverless的框架(Express、Fastify、Hapi、Koa、Micro 和 Cloudflare)。因此这些框架的使用者使用在创建<code>ApolloServer</code>对象之后立刻启动graphql服务。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> server = <span class="keyword">new</span> <span class="title class_">ApolloServer</span>(&#123;...&#125;);</span><br><span class="line"><span class="keyword">await</span> server.<span class="title function_">start</span>();</span><br><span class="line">server.<span class="title function_">applyMiddleware</span>(&#123; app &#125;);</span><br></pre></td></tr></table></figure><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>现在可以在浏览器打开<code>GraphQL Playground</code>, 以<a href="https://github.com/damingerdai/express-postgres-ts-starter">express-postgres-ts-starter</a>为例，使用<code>http://127.0.0.1:3000/graphql</code>就可以看到效果了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> apollo </tag>
            
            <tag> graphql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从springfox迁移到springdoc</title>
      <link href="/2021/11/29/back-end/migrate-springdoc-from-springfox/"/>
      <url>/2021/11/29/back-end/migrate-springdoc-from-springfox/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之所以考虑从springfox迁移到springdoc是因为我的开源项目<a href="https://github.com/damingerdai/hoteler">hoteler</a>在升级到spring boot 2.6之后，UT的<a href="https://github.com/damingerdai/hoteler/runs/4272646614?check_suite_focus=true">CI&#x2F;CD</a>挂了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HotelerApplicationTests &gt; contextLoads() FAILED</span><br><span class="line">    java.lang.IllegalStateException at DefaultCacheAwareContextLoaderDelegate.java:<span class="number">132</span></span><br><span class="line">        Caused by: org.springframework.context.ApplicationContextException at DefaultLifecycleProcessor.java:<span class="number">181</span></span><br><span class="line">            Caused by: java.lang.NullPointerException at WebMvcPatternsRequestConditionWrapper.java:<span class="number">56</span></span><br><span class="line"></span><br><span class="line">ErrorPropTest &gt; setErrors() FAILED</span><br><span class="line">    java.lang.IllegalStateException at DefaultCacheAwareContextLoaderDelegate.java:<span class="number">132</span></span><br><span class="line">        Caused by: org.springframework.context.ApplicationContextException at DefaultLifecycleProcessor.java:<span class="number">181</span></span><br><span class="line">            Caused by: java.lang.NullPointerException at WebMvcPatternsRequestConditionWrapper.java:<span class="number">56</span></span><br><span class="line"></span><br><span class="line">... more</span><br></pre></td></tr></table></figure><p>在一番定位和谷歌之后，在<a href="https://github.com/springfox/springfox/issues/3462">Spring 5.3&#x2F;Spring Boot 2.4 support</a>和<a href="https://github.com/lWoHvYe/eladmin/commit/b879685a4962cb19062adeb0433c73a91c67e978">spring boot升级2.6.0。启动报错 原因详见：springfox&#x2F;springfox#3462</a>中的提示下，猜测是<a href="https://github.com/springfox/springfox">springfox</a>未升级导致的不兼容导致的问题。本来计划等待springfox官方自行升级，结果一看github的提价记录，springfox从2020年10月14号之后就在也没有更新代码了，因此决定，<a href="https://github.com/damingerdai/hoteler/issues/140">从springfox迁移到springdoc</a>。</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>如果仍然想在spring 2.6之后使用springfox，建议在配置文件中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.mvc.pathmatch.matching-strategy=ant_path_matcher</span><br></pre></td></tr></table></figure><p>更多信息可以参考<a href="https://github.com/lWoHvYe/eladmin/blob/main/document/springboot/SpringBoot-2.6.0.md">https://github.com/lWoHvYe/eladmin</a>。</p><h1 id="删除springfox依赖和相关代码"><a href="#删除springfox依赖和相关代码" class="headerlink" title="删除springfox依赖和相关代码"></a>删除springfox依赖和相关代码</h1><p>首先删除springfox的依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># gradle</span><br><span class="line">io.springfox:springfox-boot-starter:3.0.0`</span><br><span class="line"></span><br><span class="line"># maven</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springfox-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>删除Controller下的swagger的注解，</p><p>删除自定的swagger的配置类，</p><p>删除<code>@EnableOpenApi</code></p><h1 id="导入springdoc依赖"><a href="#导入springdoc依赖" class="headerlink" title="导入springdoc依赖"></a>导入springdoc依赖</h1><p>对于gradle用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &#x27;org.springdoc:springdoc-openapi-ui:1.5.12&#x27;</span><br></pre></td></tr></table></figure><p>对于maven用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springdoc&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;springdoc-openapi-ui&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.5.12&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="OpenApi配置"><a href="#OpenApi配置" class="headerlink" title="OpenApi配置"></a>OpenApi配置</h1><p>创建OpenApi配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenApiConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义License：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> License <span class="title function_">license</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">License</span>()</span><br><span class="line">              .name(<span class="string">&quot;MIT&quot;</span>)</span><br><span class="line">              .url(<span class="string">&quot;https://opensource.org/licenses/MIT&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注： 这里我采用MIT的开源协议，更多协议，请访问<a href="https://opensource.org/licenses">https://opensource.org/licenses</a>。</p></blockquote><p>定义Open Api的基本信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Info <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Info</span>()</span><br><span class="line">              .title(<span class="string">&quot;Hoteler Open API&quot;</span>)</span><br><span class="line">              .description(<span class="string">&quot;大明二代&quot;</span>)</span><br><span class="line">              .version(<span class="string">&quot;v0.0.1&quot;</span>)</span><br><span class="line">              .license(license());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义外部文档信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> ExternalDocumentation <span class="title function_">externalDocumentation</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ExternalDocumentation</span>()</span><br><span class="line">            .description(<span class="string">&quot;大明二代的Hoteler&quot;</span>)</span><br><span class="line">            .url(<span class="string">&quot;https://github.com/damingerdai/hoteler&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义OpenAPI的spring bean：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">public OpenAPI springShopOpenAPI() &#123;</span><br><span class="line">    return new OpenAPI()</span><br><span class="line">            .info(info())</span><br><span class="line">            .externalDocs(externalDocumentation());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在配置文件中定义openapi的扫描策略:</p><ol><li>基于指定接口包扫描</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">springdoc:</span><br><span class="line">  packagesToScan: org.daming.hoteler.api.web (这是我自己的web包)</span><br></pre></td></tr></table></figure><ol start="2"><li>基于接口路由扫描</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">springdoc:</span><br><span class="line">  pathsToMatch: /api/**, /dev/**</span><br></pre></td></tr></table></figure><p>在controler添加@Tag注解<br>在controler方法上添加@Operation注解<br>在 @Operation 注解上添加@Parameters 和 @Parameter 说明，用于springdoc解析controler方法的参数<br>在的请求体类添加@Schema注解</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">package org.daming.hoteler.api.web;</span><br><span class="line"></span><br><span class="line">import io.swagger.v3.oas.annotations.Operation;</span><br><span class="line">import io.swagger.v3.oas.annotations.Parameter;</span><br><span class="line">import io.swagger.v3.oas.annotations.enums.ParameterIn;</span><br><span class="line">import io.swagger.v3.oas.annotations.security.SecurityRequirement;</span><br><span class="line">import io.swagger.v3.oas.annotations.tags.Tag;</span><br><span class="line">...more</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * customer constoller</span><br><span class="line"> *</span><br><span class="line"> * @author gming001</span><br><span class="line"> * @create 2020-12-25 22:13</span><br><span class="line"> **/</span><br><span class="line">@Tag(name = &quot;客户&quot;, description = &quot;客户 API&quot;)</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;api/v1&quot;)</span><br><span class="line">public class CustomerController &#123;</span><br><span class="line"></span><br><span class="line">    private ICustomerService customerService;</span><br><span class="line"></span><br><span class="line">    private IErrorService errorService;</span><br><span class="line"></span><br><span class="line">    @Operation(</span><br><span class="line">            summary = &quot;创建客户信息&quot;&#125;,</span><br><span class="line">            parameters = &#123;</span><br><span class="line">                    @Parameter(name = &quot;body&quot;, description = &quot;创建用户信息的请求体&quot;)</span><br><span class="line">            &#125;</span><br><span class="line">    )</span><br><span class="line">    @PostMapping(&quot;customer&quot;)</span><br><span class="line">    public CommonResponse create(@RequestBody CreateCustomerRequest request) &#123;</span><br><span class="line">        var customer = new Customer().setName(request.getName()).setGender(request.getGender()).setCardId(request.getCardId()).setPhone(request.getPhone());</span><br><span class="line">        var id =  this.customerService.create(customer);</span><br><span class="line">        return new DataResponse&lt;&gt;(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Operation(summary = &quot;更新客户信息&quot;)</span><br><span class="line">    @PutMapping(&quot;customer&quot;)</span><br><span class="line">    public CommonResponse update(@RequestBody UpdateCustomerRequest request) &#123;</span><br><span class="line">        var customer = new Customer().setId(request.getId()).setName(request.getName()).setGender(request.getGender()).setCardId(request.getCardId()).setPhone(request.getPhone());</span><br><span class="line">        this.customerService.update(customer);</span><br><span class="line">        return new CommonResponse();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Operation(summary = &quot;获取所有的客户信息&quot;)</span><br><span class="line">    @GetMapping(&quot;customers&quot;)</span><br><span class="line">    public CommonResponse list() &#123;</span><br><span class="line">        var list = this.customerService.list();</span><br><span class="line">        return new ListResponse&lt;&gt;(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Operation(summary = &quot;删除客户信息&quot;)</span><br><span class="line">    @DeleteMapping(&quot;customer/&#123;id&#125;&quot;)</span><br><span class="line">    public CommonResponse delete(@PathVariable(&quot;id&quot;) String customerId) throws HotelerException &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            var id = Long.valueOf(customerId);</span><br><span class="line">            this.customerService.delete(id);</span><br><span class="line">        &#125; catch (NumberFormatException nfe) &#123;</span><br><span class="line">            var params = new Object[] &#123; nfe.getMessage() &#125;;</span><br><span class="line">            throw errorService.createHotelerException(ErrorCodeConstants.BAD_REQUEST_ERROR_CODEE, params, nfe);</span><br><span class="line">        &#125; catch (Exception ex) &#123;</span><br><span class="line">            throw errorService.createHotelerException(ErrorCodeConstants.SYSTEM_ERROR_CODEE, ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return new CommonResponse();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public CustomerController(</span><br><span class="line">            ICustomerService customerService,</span><br><span class="line">            IErrorService errorService) &#123;</span><br><span class="line">        super();</span><br><span class="line">        this.customerService = customerService;</span><br><span class="line">        this.errorService = errorService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * create customer request</span><br><span class="line"> *</span><br><span class="line"> * @author gming001</span><br><span class="line"> * @create 2020-12-25 22:15</span><br><span class="line"> **/</span><br><span class="line">@Schema(name = &quot;创建客户请求&quot;)</span><br><span class="line">public class CreateCustomerRequest implements Serializable &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = -7819607546063963266L;</span><br><span class="line"></span><br><span class="line">    @Schema(name = &quot;名字&quot;)</span><br><span class="line">    private String name;</span><br><span class="line"></span><br><span class="line">    private Gender gender;</span><br><span class="line"></span><br><span class="line">    private String cardId;</span><br><span class="line"></span><br><span class="line">    private long phone：</span><br><span class="line"></span><br><span class="line">    ...more</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="添加对JWT对token的支持-本步骤可选"><a href="#添加对JWT对token的支持-本步骤可选" class="headerlink" title="添加对JWT对token的支持(本步骤可选)"></a>添加对JWT对token的支持(本步骤可选)</h1><p>在添加OpenApiConfig类上添加Components信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">private Components components() &#123;</span><br><span class="line">    return new Components()</span><br><span class="line">            .addSecuritySchemes(&quot;bearer-key&quot;, new SecurityScheme().type(SecurityScheme.Type.HTTP).scheme(&quot;bearer&quot;).bearerFormat(&quot;JWT&quot;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在OpenApi中注册Components:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  @Bean</span><br><span class="line">  public OpenAPI springShopOpenAPI() &#123;</span><br><span class="line">      return new OpenAPI()</span><br><span class="line">              .info(info())</span><br><span class="line">              .components(components())</span><br><span class="line">              .externalDocs(externalDocumentation());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在需要使用Authorization的接口上添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Operation(security = &#123; @SecurityRequirement(name = &quot;bearer-key&quot;) &#125;)</span><br></pre></td></tr></table></figure><h1 id="swagger-ui"><a href="#swagger-ui" class="headerlink" title="swagger-ui"></a>swagger-ui</h1><p>在浏览器中输入<a href="http://127.0.0.1:8443/swagger-ui.html">http://127.0.0.1:8443/swagger-ui.html</a>或者<a href="http://localhost:8443/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config">http://localhost:8443/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config</a></p><blockquote><p>注： 8443是我个人比较喜欢的web开发的端口占用，一般人使用8080比较多。</p></blockquote><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="/images/migrate-springdoc-from-springfox/swagger-ui.webp" alt="swagger-ui"></p><h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><p><a href="https://github.com/damingerdai/hoteler/pull/146">feat: 从springfox迁移到springdoc以及修复AuthenticationFilter过滤失败的问题</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> springdoc </tag>
            
            <tag> swagger-ui </tag>
            
            <tag> oepn api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle配置阿里镜像</title>
      <link href="/2021/10/29/back-end/gradle-ali-mirror/"/>
      <url>/2021/10/29/back-end/gradle-ali-mirror/</url>
      
        <content type="html"><![CDATA[<h1 id="Gradle配置阿里镜像"><a href="#Gradle配置阿里镜像" class="headerlink" title="Gradle配置阿里镜像"></a>Gradle配置阿里镜像</h1><p>为了加快gradle的国内下载的速度，我们可以为gradle配置阿里仓库的镜像</p><p>请在gradle的安装目录下的<code>init.d</code>的文件夹下添加<code>init.gradle</code>:</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">gradle.projectsLoaded &#123;</span><br><span class="line">    rootProject.allprojects &#123;</span><br><span class="line">        buildscript &#123;</span><br><span class="line">            repositories &#123;</span><br><span class="line">                <span class="keyword">def</span> JCENTER_URL = <span class="string">&#x27;https://maven.aliyun.com/repository/public&#x27;</span></span><br><span class="line">                <span class="keyword">def</span> GOOGLE_URL = <span class="string">&#x27;https://maven.aliyun.com/repository/google&#x27;</span></span><br><span class="line">                <span class="keyword">def</span> NEXUS_URL = <span class="string">&#x27;https://maven.aliyun.com/repository/central&#x27;</span></span><br><span class="line">                all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">                    <span class="keyword">if</span> (repo <span class="keyword">instanceof</span> MavenArtifactRepository) &#123;</span><br><span class="line">                        <span class="keyword">def</span> url = repo.url.toString()</span><br><span class="line">                        <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;https://jcenter.bintray.com/&#x27;</span>)) &#123;</span><br><span class="line">                            project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $JCENTER_URL.&quot;</span></span><br><span class="line">                            println(<span class="string">&quot;buildscript $&#123;repo.url&#125; replaced by $JCENTER_URL.&quot;</span>)</span><br><span class="line">                            remove repo</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;https://dl.google.com/dl/android/maven2/&#x27;</span>)) &#123;</span><br><span class="line">                            project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $GOOGLE_URL.&quot;</span></span><br><span class="line">                            println(<span class="string">&quot;buildscript $&#123;repo.url&#125; replaced by $GOOGLE_URL.&quot;</span>)</span><br><span class="line">                            remove repo</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;https://repo1.maven.org/maven2&#x27;</span>)) &#123;</span><br><span class="line">                            project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $REPOSITORY_URL.&quot;</span></span><br><span class="line">                            println(<span class="string">&quot;buildscript $&#123;repo.url&#125; replaced by $REPOSITORY_URL.&quot;</span>)</span><br><span class="line">                            remove repo</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                jcenter &#123;</span><br><span class="line">                    url JCENTER_URL</span><br><span class="line">                &#125;</span><br><span class="line">                google &#123;</span><br><span class="line">                    url GOOGLE_URL</span><br><span class="line">                &#125;</span><br><span class="line">                maven &#123;</span><br><span class="line">                    url NEXUS_URL</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        repositories &#123;</span><br><span class="line">            <span class="keyword">def</span> JCENTER_URL = <span class="string">&#x27;https://maven.aliyun.com/repository/public&#x27;</span></span><br><span class="line">            <span class="keyword">def</span> GOOGLE_URL = <span class="string">&#x27;https://maven.aliyun.com/repository/google&#x27;</span></span><br><span class="line">            <span class="keyword">def</span> NEXUS_URL = <span class="string">&#x27;https://maven.aliyun.com/repository/central&#x27;</span></span><br><span class="line">            all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">                <span class="keyword">if</span> (repo <span class="keyword">instanceof</span> MavenArtifactRepository) &#123;</span><br><span class="line">                    <span class="keyword">def</span> url = repo.url.toString()</span><br><span class="line">                    <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;https://jcenter.bintray.com/&#x27;</span>)) &#123;</span><br><span class="line">                        project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $JCENTER_URL.&quot;</span></span><br><span class="line">                        println(<span class="string">&quot;buildscript $&#123;repo.url&#125; replaced by $JCENTER_URL.&quot;</span>)</span><br><span class="line">                        remove repo</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;https://dl.google.com/dl/android/maven2/&#x27;</span>)) &#123;</span><br><span class="line">                        project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $GOOGLE_URL.&quot;</span></span><br><span class="line">                        println(<span class="string">&quot;buildscript $&#123;repo.url&#125; replaced by $GOOGLE_URL.&quot;</span>)</span><br><span class="line">                        remove repo</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;https://repo1.maven.org/maven2&#x27;</span>)) &#123;</span><br><span class="line">                        project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $REPOSITORY_URL.&quot;</span></span><br><span class="line">                        println(<span class="string">&quot;buildscript $&#123;repo.url&#125; replaced by $REPOSITORY_URL.&quot;</span>)</span><br><span class="line">                        remove repo</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            jcenter &#123;</span><br><span class="line">                url JCENTER_URL</span><br><span class="line">            &#125;</span><br><span class="line">            google &#123;</span><br><span class="line">                url GOOGLE_URL</span><br><span class="line">            &#125;</span><br><span class="line">            maven &#123;</span><br><span class="line">                url NEXUS_URL</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.zhihu.com/collection/276086251">如何构建 Spring 源码环境？</a></li><li><a href="https://developer.aliyun.com/mvn/guide">阿里云云效 Maven</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nodejs项目的Dockerfile模版</title>
      <link href="/2021/10/20/front-end/node-docker-template/"/>
      <url>/2021/10/20/front-end/node-docker-template/</url>
      
        <content type="html"><![CDATA[<h1 id="Nodejs项目的Dockerfile模版"><a href="#Nodejs项目的Dockerfile模版" class="headerlink" title="Nodejs项目的Dockerfile模版"></a>Nodejs项目的Dockerfile模版</h1><h2 id="基于Yarn"><a href="#基于Yarn" class="headerlink" title="基于Yarn"></a>基于Yarn</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">14.17</span>.<span class="number">6</span>-alpine3.<span class="number">14</span> as build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消对https的证书限制</span></span><br><span class="line"><span class="comment"># ENV SELF_SIGNED_CERT_IN_CHAIN=true</span></span><br><span class="line"><span class="comment"># ENV NODE_TLS_REJECT_UNAUTHORIZED=0</span></span><br><span class="line"><span class="comment"># RUN npm config set strict-ssl false</span></span><br><span class="line"><span class="comment"># RUN yarn config set strict-ssl false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk update &amp;&amp; apk add bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> package.json yarn.lock .npmrc /tmp/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /tmp &amp;&amp; yarn install --frozen-lockfile --non-interactive</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> -p /app &amp;&amp; <span class="built_in">cp</span> -a /tmp/node_modules /app/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yarn build</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> build AS ci</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yarn run <span class="built_in">test</span>:ci &amp;&amp; yarn install --frozen-lockfile --non-interactive --production</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> node:<span class="number">14.17</span>.<span class="number">6</span>-alpine3.<span class="number">14</span> as release</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> -p /app &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">addgroup -S daminggroup &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">adduser -S -h /app -G daminggroup daminguser &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"><span class="built_in">chown</span> -R daminguser:daminggroup /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=ci --<span class="built_in">chown</span>=daminguser:daminggroup /app/dist ./dist</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=ci --<span class="built_in">chown</span>=daminguser:daminggroup /app/node_modules ./node_modules</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=ci --<span class="built_in">chown</span>=daminguser:daminggroup /app/package.json .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="language-bash"> --interval=30s --<span class="built_in">timeout</span>=30s CMD curl -f http://localhost:3978/ping || <span class="built_in">exit</span> 1</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3978</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;node dist/index.js&quot;</span>]</span></span><br></pre></td></tr></table></figure><h2 id="基于NPM"><a href="#基于NPM" class="headerlink" title="基于NPM"></a>基于NPM</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">14.17</span>.<span class="number">6</span>-alpine3.<span class="number">14</span> as build</span><br><span class="line"></span><br><span class="line"><span class="comment"># pwc network limit</span></span><br><span class="line"><span class="comment"># ENV SELF_SIGNED_CERT_IN_CHAIN=true</span></span><br><span class="line"><span class="comment"># ENV NODE_TLS_REJECT_UNAUTHORIZED=0</span></span><br><span class="line"><span class="comment"># RUN npm config set strict-ssl false</span></span><br><span class="line"><span class="comment"># RUN yarn config set strict-ssl false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk update &amp;&amp; apk add bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> package.json package-lock.json .npmrc /tmp/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /tmp &amp;&amp; npm install</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> -p /app &amp;&amp; <span class="built_in">cp</span> -a /tmp/node_modules /app/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm run build</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> build AS ci</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm run <span class="built_in">test</span>:ci &amp;&amp; npm install --production --ignore-scripts <span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> node:<span class="number">14.17</span>.<span class="number">6</span>-alpine3.<span class="number">14</span> as release</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> -p /app &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">addgroup -S daminggroup &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">adduser -S -h /app -G daminggroup daminguser &amp;&amp; \</span></span><br><span class="line"><span class="language-bash"><span class="built_in">chown</span> -R daminguser:daminggroup /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=ci --<span class="built_in">chown</span>=daminguser:daminggroup /app/dist ./dist</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=ci --<span class="built_in">chown</span>=daminguser:daminggroup /app/node_modules ./node_modules</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=ci --<span class="built_in">chown</span>=daminguser:daminggroup /app/package.json .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="language-bash"> --interval=30s --<span class="built_in">timeout</span>=30s CMD curl -f http://localhost:3978/ping || <span class="built_in">exit</span> 1</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3978</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;node dist/index.js&quot;</span>]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Bazel编译TypeScript</title>
      <link href="/2021/08/22/front-end/build-typescript-with-bazel/"/>
      <url>/2021/08/22/front-end/build-typescript-with-bazel/</url>
      
        <content type="html"><![CDATA[<h1 id="使用Bazel编译TypeScript"><a href="#使用Bazel编译TypeScript" class="headerlink" title="使用Bazel编译TypeScript"></a>使用Bazel编译TypeScript</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>请事先安装<a href="https://nodejs.org/dist/v14.17.3/">Nodejs</a>,<a href="https://classic.yarnpkg.com/en/docs/install">Yarn 1.x</a>和<a href="https://docs.bazel.build/versions/4.2.0/install.html">Bazel</a></p><p>我使用的版本为:</p><ol><li>Nodejs: v14.17.3</li><li>Yarn:    1.22.5</li><li>Bzel:    4.1.0</li></ol><h2 id="创建一个Typescript项目"><a href="#创建一个Typescript项目" class="headerlink" title="创建一个Typescript项目"></a>创建一个Typescript项目</h2><p>选择指定目录，创建一个名为<code>ts-bazel</code>(其他名字也可以)的文件夹，使用终端进入该文件夹，然后执行<code>npm init</code>，一路选择默认。</p><p>安装Typescipt:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add typescipt -D</span><br></pre></td></tr></table></figure><p>创建Typescript配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx tsc --init</span><br></pre></td></tr></table></figure><p>创建<code>src</code>文件夹，在该文件夹里新建<code>index.ts</code>文件，并写入一下内容：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sayHello</span>(<span class="params">name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`helle <span class="subst">$&#123;name&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">sayHello</span>(<span class="string">&#x27;daming&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="配置Bazel"><a href="#配置Bazel" class="headerlink" title="配置Bazel"></a>配置Bazel</h2><p>安装bazel等相关依赖：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @bazel/bazelisk @bazel/ibazel @bazel/typescript -D </span><br></pre></td></tr></table></figure><p>在根目录里创建<code>WORKSPACE</code>, 并写入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">workspace(</span><br><span class="line">    name = &quot;ts-bazel&quot;,</span><br><span class="line">    managed_directories = &#123;&quot;@npm&quot;: [&quot;node_modules&quot;]&#125;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">load(&quot;@bazel_tools//tools/build_defs/repo:http.bzl&quot;, &quot;http_archive&quot;)</span><br><span class="line"></span><br><span class="line">http_archive(</span><br><span class="line">    name = &quot;build_bazel_rules_nodejs&quot;,</span><br><span class="line">    sha256 = &quot;275744d287af4c3a78d7c9891f2d970b7bc7eca8cfc0e9a671fe6258d09ff217&quot;,</span><br><span class="line">    urls = [&quot;https://github.com/bazelbuild/rules_nodejs/releases/download/4.0.0-rc.1/rules_nodejs-4.0.0-rc.1.tar.gz&quot;],</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">load(&quot;@build_bazel_rules_nodejs//:index.bzl&quot;, &quot;check_rules_nodejs_version&quot;, &quot;node_repositories&quot;, &quot;yarn_install&quot;)</span><br><span class="line"></span><br><span class="line">check_rules_nodejs_version(minimum_version_string = &quot;2.2.0&quot;)</span><br><span class="line"></span><br><span class="line"># Setup the Node.js toolchain</span><br><span class="line">node_repositories(</span><br><span class="line">    node_version = &quot;14.17.3&quot;,</span><br><span class="line">    package_json = [&quot;//:package.json&quot;],</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">yarn_install(</span><br><span class="line">    name = &quot;npm&quot;,</span><br><span class="line">    package_json = &quot;//:package.json&quot;,</span><br><span class="line">    yarn_lock = &quot;//:yarn.lock&quot;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>在根目录中创建<code>BUILD.bazel</code>文件，并写入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">package(default_visibility = [&quot;//visibility:public&quot;])</span><br><span class="line"></span><br><span class="line">exports_files([&quot;tsconfig.json&quot;])</span><br></pre></td></tr></table></figure><p>在<code>src</code>文件夹中创建<code>BUILD.bazel</code>文件，并写入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package(default_visibility = [&quot;//visibility:public&quot;])</span><br><span class="line"></span><br><span class="line">load(&quot;@npm//@bazel/typescript:index.bzl&quot;, &quot;ts_project&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ts_project(</span><br><span class="line">  name = &quot;index&quot;,</span><br><span class="line">  srcs = [&quot;index.ts&quot;],</span><br><span class="line">  tsconfig = &quot;//:tsconfig.json&quot;,</span><br><span class="line">  visibility = [&quot;//visibility:public&quot;],</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>现在可以使用<code>bazel</code>编译项目了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bazel build //src:index</span><br></pre></td></tr></table></figure><p>检查一下结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node  bazel-bin/src/index.js</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helle daming</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bazel </tag>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew安装笔记</title>
      <link href="/2021/07/31/software/install/how-to-install-homebrew/"/>
      <url>/2021/07/31/software/install/how-to-install-homebrew/</url>
      
        <content type="html"><![CDATA[<h1 id="Homebrew安装笔记"><a href="#Homebrew安装笔记" class="headerlink" title="Homebrew安装笔记"></a>Homebrew安装笔记</h1><p>简单记录一下Homebrew安装</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>新建终端，以下命令安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure><h2 id="配置国内镜像"><a href="#配置国内镜像" class="headerlink" title="配置国内镜像"></a>配置国内镜像</h2><p>替换 brew.git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &quot;$(brew --repo)&quot; &amp;&amp; git remote set-url origin https://mirrors.ustc.edu.cn/brew.git</span><br></pre></td></tr></table></figure><p>替换 homebrew-core.git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot; &amp;&amp; git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure><p>Homebrew Bottles 配置镜像</p><p>以zsh为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="恢复默认官方源"><a href="#恢复默认官方源" class="headerlink" title="恢复默认官方源"></a>恢复默认官方源</h2><p>重置brew.git:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &quot;$(brew --repo)&quot; &amp;&amp; git remote set-url origin https://github.com/Homebrew/brew.git</span><br></pre></td></tr></table></figure><p>重置homebrew-core.git:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot; &amp;&amp; git remote set-url origin https://github.com/Homebrew/homebrew-core.git</span><br></pre></td></tr></table></figure><p>注释掉 zsh 配置文件里的有关 Homebrew Bottles 即可恢复官方源。 重启 zsh 或让 zsh 重读配置文件。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zhuanlan.zhihu.com/p/137464385">教你一招搞定 Homebrew 下载加速</a><br><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/brew/">替换及重置 Homebrew 默认源</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> homebew </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript中可选链</title>
      <link href="/2021/07/03/front-end/ts-optional-chaining/"/>
      <url>/2021/07/03/front-end/ts-optional-chaining/</url>
      
        <content type="html"><![CDATA[<h1 id="TypeScript中可选链"><a href="#TypeScript中可选链" class="headerlink" title="TypeScript中可选链"></a>TypeScript中可选链</h1><h2 id="什么是可选链"><a href="#什么是可选链" class="headerlink" title="什么是可选链"></a>什么是可选链</h2><p>TypeScript 3.7中一个最引人关注的特性便是可选链(Optional Chaining)。</p><p>所谓可选链，就是当我们试图使用访问对象的字段或者方法时，如果对象为<code>null</code>或者<code>undefined</code>，TypeScript将会自动停止运行的代码，以防止空指针异常。</p><h2 id="可选链的使用"><a href="#可选链的使用" class="headerlink" title="可选链的使用"></a>可选链的使用</h2><p>首先定义一个接口 A, 有一个字段b，b可能是字符串，也可能是null:</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> A &#123;</span><br><span class="line">    <span class="attr">b</span>: <span class="built_in">string</span> | <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义一个变量a:</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = &#123;</span><br><span class="line">    <span class="attr">b</span>: <span class="string">&#x27;c&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>?.</code>来访问字段:</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a?.<span class="property">b</span>)</span><br></pre></td></tr></table></figure><p>如果a为<code>null</code>或者<code>undefined</code>, 将输出<code>undefined</code></p><h2 id="TypeScript做了什么"><a href="#TypeScript做了什么" class="headerlink" title="TypeScript做了什么"></a>TypeScript做了什么</h2><p>可选链并不是ts的专利，在js就已经存在了，除了ie,其他现代浏览器最新版本都是支持了，但是一些老版本就不支持，因此ts没有使用js的语法，而是通过三元表达式<code>? :</code>转译。因此上面的代码将会转译成:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === <span class="literal">null</span> || a === <span class="keyword">void</span> <span class="number">0</span> ? <span class="keyword">void</span> <span class="number">0</span> : a.<span class="property">b</span>);</span><br></pre></td></tr></table></figure><p>但是ts没有判断a是否是<code>undefined</code>, 而是因为在js中， <code>undefined</code>不仅是值，也可能是一个全局变量。直到es5之前，<code>undefined</code>是可以被修改的。我们可以通过下面的代码来修改:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="literal">undefined</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">undefined</span>) <span class="comment">// 1</span></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://jkchao.github.io/typescript-book-chinese/new/typescript-3.7.html#%E5%8F%AF%E9%80%89%E9%93%BE%EF%BC%88optional-chaining%EF%BC%89">深入理解 TypeScript(可选链（Optional Chaining）)</a></li><li><a href="https://fodor.org/blog/js-undefined-null-void/">JS: The difference between “undefined”, “null” and “void 0”</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Optional_chaining">可选链操作符</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在windows上构建angular项目(上)</title>
      <link href="/2021/05/17/front-end/build-angular-on-windows-02/"/>
      <url>/2021/05/17/front-end/build-angular-on-windows-02/</url>
      
        <content type="html"><![CDATA[<h1 id="在windows上构建angular项目-下"><a href="#在windows上构建angular项目-下" class="headerlink" title="在windows上构建angular项目 (下)"></a>在windows上构建angular项目 (下)</h1><p>当完成bazel的安装之后，我们还需要安装nodejs就可以开始编译angular了。</p><h2 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h2><p>目前angular仅支持nodejs12和nodejs14这两个版本，推荐使用node14这个版本。</p><p>对于windows平台而言，nodejs可以直接从<a href="https://nodejs.org/en/">官网</a>选择windows平台的二进制包下载，然后进行点击安装就可以了，但是我个人更推荐使用<a href="https://github.com/coreybutler/nvm-windows">nvm-windows</a>。</p><h3 id="nvm-windows"><a href="#nvm-windows" class="headerlink" title="nvm-windows"></a>nvm-windows</h3><p>nvm-windows是windows平台上常用的node版本管理工具，可以方便我们针对不同项目的要求切换不同的node版本。点击<a href="https://github.com/coreybutler/nvm/releases">该链接</a>，下载最新安装包，然后点击安装。</p><h4 id="使用国内镜像"><a href="#使用国内镜像" class="headerlink" title="使用国内镜像"></a>使用国内镜像</h4><p>由于国家特殊的网络政策，我们需要使用淘宝镜像:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm node_mirror http://npm.taobao.org/mirrors/node/ // 注意结尾有斜杠</span><br><span class="line">nvm npm_mirror https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure><h4 id="安装nodejs14"><a href="#安装nodejs14" class="headerlink" title="安装nodejs14"></a>安装nodejs14</h4><p>目前node14的最新版是14.17.0，现在我们可以使用nvm来进行安装:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install v14.17.0</span><br><span class="line">nvm use v14.17.0</span><br></pre></td></tr></table></figure><p>现在我们可以验证一下node是否正确安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br><span class="line"></span><br><span class="line">// 结果</span><br><span class="line">v14.17.0</span><br></pre></td></tr></table></figure><h2 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h2><p><a href="https://classic.yarnpkg.com/lang/en/">Yarn</a>是Facebook开发的nodejs包管理工具，与早期npm相比，具有下载速度快，命令更加友好，提供本版本锁等优势。当然，虽然npm不断的更新迭代，yarn的优势也不再明显，但是angular开发团队更加推荐使用yarn。</p><p>在这里需要注意的是，<a href="https://classic.yarnpkg.com/lang/en/">Yarn1.x</a>和<a href="https://yarnpkg.com/">Yarn2.x</a>是两个不兼容的版本，而angular只支持yarnv1.22.4以上且不包括2的版本(即&gt;&#x3D;1.22.4 &lt;2)。因此在下载的时候请选择正确的版本。</p><h2 id="Angular"><a href="#Angular" class="headerlink" title="Angular"></a>Angular</h2><p>当bazel、nodejs、yarn都安装完毕之后，我们终于可以在本地开始编译angular了。</p><h3 id="下载angular仓库"><a href="#下载angular仓库" class="headerlink" title="下载angular仓库"></a>下载angular仓库</h3><p>在终端执行clone命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth=16 https://github.com/angular/angular.git</span><br></pre></td></tr></table></figure><blockquote><p><code>--depth=16</code>表示仅仅git只会拉去最新16个commit。</p></blockquote><h3 id="安装angular依赖"><a href="#安装angular依赖" class="headerlink" title="安装angular依赖"></a>安装angular依赖</h3><p>在安装依赖之前，我们需要先删除<code>sauce-connect</code>依赖，因为该依赖不支持windows，且也不影响我们的编译。</p><p>在终端执行yarn命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn</span><br></pre></td></tr></table></figure><h3 id="编译angular"><a href="#编译angular" class="headerlink" title="编译angular"></a>编译angular</h3><p>在终端执行编译脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node scripts/build/build-packages-dist.js</span><br></pre></td></tr></table></figure><p>该命令将会先后编译angular,angular-in-memory-web-api和zone.js三大模块。</p><blockquote><p>如果编译过程中发生错误，可以在重新执行编译脚本之前，执行clean命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bazel clean</span><br></pre></td></tr></table></figure></blockquote><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>当上面的命令正确执行完成之后，检查一下dist目录下的编译后的angular代码了：</p><ol><li><code>dist\angular-in-memory-web-api-dist\angular-in-memory-web-api</code>目录下是<a href="https://www.npmjs.com/package/angular-in-memory-web-api">angular-in-memory-web-api</a>；</li><li><code>dist\packages-dist</code>目录下便是angular各个模块的代码了；</li><li><code>dist\zone.js-dist</code>目录下的是<a href="https://www.npmjs.com/package/zone.js">zone.js</a>。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>到此，windows上编译angular就算是完成了。angular使用bazel作为编译工具，确实导致编译的成本高了很多，尤其是在windows平台，但是不停探索的过程，是一个不断学习的过程。这个过程，不挣钱，就是交个朋友。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> bazel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在windows上构建angular项目(上)</title>
      <link href="/2021/05/13/front-end/build-angular-on-windows-01/"/>
      <url>/2021/05/13/front-end/build-angular-on-windows-01/</url>
      
        <content type="html"><![CDATA[<h1 id="在windows上构建angular项目-上"><a href="#在windows上构建angular项目-上" class="headerlink" title="在windows上构建angular项目 (上)"></a>在windows上构建angular项目 (上)</h1><p>前端三大框架( <a href="https://angular.io/">angular</a>, <a href="https://reactjs.org/">reac</a>, <a href="https://vuejs.org/">vue</a> )中，angular一直都是一个很独特的存在。首先，angular的概念很多，服务、依赖注入、模块，指令等，都是在前端圈不是很常用的，此外，angular使用了<a href="https://www.bazel.build/">bazel</a>作为构建工具，而react和vue都是使用了<a href="https://rollupjs.org/guide/en/">rollup</a>，因此在本地编译构建angular将会远远超过react和vue，如果你是用的windows平台，那么一个个坑需要自己慢慢来填。。。</p><h1 id="Bazel是什么？"><a href="#Bazel是什么？" class="headerlink" title="Bazel是什么？"></a>Bazel是什么？</h1><p>根据官网的定义，Bazel是类似于Make，Maven和Gradle的开源构建和测试工具。它使用人类可读的高级构建语言<a href="https://github.com/bazelbuild/starlark">Starlark</a>(一种基于python的方言)。 Bazel支持多种语言的项目，并为多种平台构建输出。 </p><p>从我个人角度来看，bazel是一个强大且复杂的构建系统，通过<code>build rule</code>的概念，支持多种语言、不同平台，支持构建C&#x2F;C++,Java,Android,IOS,Golang,Nodejs,Docker项目</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Bazel官方支持Windows，macOS, Ubuntu Linux三大平台，这也是开发人员比较常用的本地开发平台。</p><p>在社区的支持下，bazel还支持其他平台，具体信息可以看一下<a href="https://docs.bazel.build/versions/4.0.0/install.html">官网</a>。这里我仅仅介绍如何在windows上安装。</p><h3 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h3><p>在安装前，请确保你windows系统符合要求：</p><ol><li>推荐使用64位的windows10，版本号不能低于1703</li><li>64位的Windows 7以上</li><li>64位的Windows Server 2008 R2以上</li></ol><p>此外，请事先安装<a href="https://www.microsoft.com/en-us/download/details.aspx?id=48145">Visual C++ Redistributable for Visual Studio 2015</a></p><h3 id="下载安装Bazel"><a href="#下载安装Bazel" class="headerlink" title="下载安装Bazel"></a>下载安装Bazel</h3><p>我们需要在<a href="https://github.com/bazelbuild/bazel/releases">github</a>选择下载<code>bazel-&lt;version&gt;-windows-x86_64.exe</code>，然后将该文件路径放在path环境变量中。</p><p>在终端中执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bazel version</span><br></pre></td></tr></table></figure><p>显示类似效果就是可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Build label: 4.0.0</span><br><span class="line">Build target: bazel-out/x64_windows-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar</span><br><span class="line">Build time: Thu Jan 21 07:39:16 2021 (1611214756)</span><br><span class="line">Build timestamp: 1611214756</span><br><span class="line">Build timestamp as int: 1611214756</span><br></pre></td></tr></table></figure><h2 id="安装编译和语言运行时"><a href="#安装编译和语言运行时" class="headerlink" title="安装编译和语言运行时"></a>安装编译和语言运行时</h2><p>根据不同语言的编译需要，我们可能需要以下的工具：</p><ol><li><a href="https://www.msys2.org/">MSYS2 x86_64</a></li><li><a href="https://aka.ms/buildtools">Build Tools for Visual Studio 2019</a></li><li><a href="https://www.oracle.com/java/technologies/javase-jdk11-downloads.html">Java SE Development Kit 11 (JDK) for Windows x64</a></li><li><a href="https://www.python.org/downloads/windows/">Python 3.6 for Windows x86-64</a></li></ol><p>如果你想在window平台编译构建angular，后三者必须的，JDK16和Python 3.9.5也能满足自己的需求。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>当完成以上步骤的时候，我们基本上就可以开始尝试在windows本地进行编译angular。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> bazel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Angular和React构建体积简单对比</title>
      <link href="/2021/02/03/front-end/simple-comparison-of-angular-and-react-build-size/"/>
      <url>/2021/02/03/front-end/simple-comparison-of-angular-and-react-build-size/</url>
      
        <content type="html"><![CDATA[<h1 id="Angular和React构建体积简单对比"><a href="#Angular和React构建体积简单对比" class="headerlink" title="Angular和React构建体积简单对比"></a>Angular和React构建体积简单对比</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://angular.io/">Angular</a>是我主要使用的前端框架， 和<a href="https://reactjs.org/">React</a>是我最近正在学习的前端框架。今天我想对比一下在各自默认的情况下，两者打包体积的对比。</p><h2 id="Angular"><a href="#Angular" class="headerlink" title="Angular"></a>Angular</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>我们使用<a href="https://www.npmjs.com/package/@angular/cli/v/11.1.2">Angular CLI: 11.1.2</a>简单创建一个angular项目:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ng new daming-angular-app</span><br><span class="line"></span><br><span class="line"># ? Do you want to enforce stricter type checking and stricter bundle budgets in the workspace? Y</span><br><span class="line"># ? Would you like to add Angular routing? Y</span><br><span class="line"># ? Which stylesheet format would you like to use? CSS</span><br></pre></td></tr></table></figure><p>然后终端会提示我们输入一些必要的参数。对于Y或N的选择，我们统一选择Y，对拥有多个选择项的，我们统一选择第一个值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ? Do you want to enforce stricter type checking and stricter bundle budgets in the workspace? Y</span><br><span class="line"># ? Would you like to add Angular routing? Y</span><br><span class="line"># ? Which stylesheet format would you like to use? CSS</span><br></pre></td></tr></table></figure><p>这样子我们就创建好了一个angular项目。</p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>在angular.json文件里，我们对<em>outputHashing</em>值从<code>all</code>改成<code>none</code>，目的在打包的时候生成js和css文件不是加上hash值，方便统计。</p><p>在终端执行构建脚本:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng build --prod</span><br></pre></td></tr></table></figure><h3 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h3><p>终端输出打包结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Initial Chunk Files | Names         |      Size</span><br><span class="line">main.js             | main          | 212.27 kB</span><br><span class="line">polyfills.js        | polyfills     |  35.73 kB</span><br><span class="line">runtime.js          | runtime       |   1.45 kB</span><br><span class="line">styles.css          | styles        |   0 bytes</span><br><span class="line"></span><br><span class="line">                    | Initial Total | 249.45 kB</span><br></pre></td></tr></table></figure><p>通过Finder查看js和css文件的大小发现:</p><ol><li>main.js大小为217kB;</li><li>polyfills.js大小为37kB;</li><li>runtime.js为1kB;</li><li>styles.css为0b。</li></ol><p>因此从finder角度来说，打包的总体积为255kB。</p><p>此外，我们使用<a href="https://www.npmjs.com/package/gzip-size-cli">gzip-size-cli</a>获取gzip的大小:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npx gzip-size-cli main.js       // 输出 64.0kB</span><br><span class="line">npx gzip-size-cli polyfills.js  // 输出 12.4kB</span><br><span class="line">npx gzip-size-cli runtime.js    // 输出 719B</span><br><span class="line">npx gzip-size-cli styles.css    // 输出 20B</span><br></pre></td></tr></table></figure><p>通过gzip压缩之后，打包的总体积为77.14kB.</p><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><p>我们使用<a href="https://create-react-app.dev/">Create React App</a>创建一个react项目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app daming-react-app</span><br></pre></td></tr></table></figure><p>与angular不同，创建react项目的时候终端不会提示我们输入必要的参数。</p><h3 id="打包-1"><a href="#打包-1" class="headerlink" title="打包"></a>打包</h3><p>在终端执行构建脚本:</p><p>如果你使用npm</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build </span><br></pre></td></tr></table></figure><p>如果你使用yarn</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build </span><br></pre></td></tr></table></figure><h3 id="统计-1"><a href="#统计-1" class="headerlink" title="统计"></a>统计</h3><p>终端输出打包结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">File sizes after gzip:</span><br><span class="line"></span><br><span class="line">  41.21 KB  build/static/js/2.6a046b6b.chunk.js</span><br><span class="line">  1.4 KB    build/static/js/3.743bc3fe.chunk.js</span><br><span class="line">  1.17 KB   build/static/js/runtime-main.073f5272.js</span><br><span class="line">  597 B     build/static/js/main.2c9755c1.chunk.js</span><br><span class="line">  531 B     build/static/css/main.8c8b27cf.chunk.css</span><br></pre></td></tr></table></figure><p>经过统计， gzip总体积为44.91kB。</p><p>通过Finder查看js和css文件的大小发现:</p><ol><li>main.2c9755c1.chunk.js大小为1kB;</li><li>runtime-main.073f5272.js大小为2kB;</li><li>2.6a046b6b.chunk.js大小为131kB;</li><li>3.743bc3fe.chunk.js大小为4kB;</li><li>main.8c8b27cf.chunk大小为804B。</li></ol><p>由此可知，从finder角度来说，打包的总体积为138.80kB。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过上面简单的对比，在各自默认的创建、构建方式下，react在打包体积大小方面比angular更具优势。但是在实际开发中，我们都会使用大量的第三方的依赖，实际项目的打包体积大小还是需要因人而异的。</p><p>源代码已经上传到<a href="https://github.com/damingerdai/imple-comparison-of-angular-and-react-build-size-code">github</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> angular </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Desktop自带k8s安装笔记</title>
      <link href="/2021/01/14/software/k8s/how-to-install-docker-desktop-k8s/"/>
      <url>/2021/01/14/software/k8s/how-to-install-docker-desktop-k8s/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Desktop自带k8s安装笔记"><a href="#Docker-Desktop自带k8s安装笔记" class="headerlink" title="Docker Desktop自带k8s安装笔记"></a>Docker Desktop自带k8s安装笔记</h1><p>安装一个k8s还是一个比较复杂的事情，但是Docker Desktop已经自带了一个简易版的k8s，可以基本满足正常的学习使用</p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>对于Mac用户，请点击<a href="https://desktop.docker.com/mac/stable/Docker.dmg">Docker Desktop</a><br>对于Windows10用户，请点击<a href="https://desktop.docker.com/win/stable/Docker%20Desktop%20Installer.exe">Docker Desktop</a></p><h3 id="配置docker的国内镜像"><a href="#配置docker的国内镜像" class="headerlink" title="配置docker的国内镜像"></a>配置docker的国内镜像</h3><p>国内的网络下载可能比较慢，建议使用下面的镜像</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://dockerproxy.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://dockerhub.azk8s.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://uyah70su.mirror.aliyuncs.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://dockerhub.mirrors.nwafu.edu.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://7bafc985f90c43b887a96c2b846cf984.mirror.swr.myhuaweicloud.com&quot;</span></span><br><span class="line">    <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;experimental&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="安装k8s所需的镜像"><a href="#安装k8s所需的镜像" class="headerlink" title="安装k8s所需的镜像"></a>安装k8s所需的镜像</h2><p>为了更快的完成一些安装，我们先通过一个阿里云的批处理，提前把Kubernetes需要的Images拉取下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AliyunContainerService/k8s-for-docker-desktop.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> k8s-for-docker-desktop</span><br><span class="line"></span><br><span class="line">.\load_images.ps1 or load_images.sh</span><br></pre></td></tr></table></figure><h2 id="启动Kubernetes"><a href="#启动Kubernetes" class="headerlink" title="启动Kubernetes"></a>启动Kubernetes</h2><p>在Docker仪表盘上在Settings切到Kubernetes上启动Enabled Kubernetes</p><h2 id="安装Dashboard（可选）"><a href="#安装Dashboard（可选）" class="headerlink" title="安装Dashboard（可选）"></a>安装Dashboard（可选）</h2><p>使用<a href="https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml">recommended.yaml</a>进行安装</p><blockquote><p>如果不能访问<em>recommended.yaml</em>， 可以使用<a href="#%E9%99%84%E5%BD%95">附录</a>的副本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f recommended.yaml </span><br><span class="line">namespace/kubernetes-dashboard created</span><br><span class="line">serviceaccount/kubernetes-dashboard created</span><br><span class="line">service/kubernetes-dashboard created</span><br><span class="line">secret/kubernetes-dashboard-certs created</span><br><span class="line">secret/kubernetes-dashboard-csrf created</span><br><span class="line">secret/kubernetes-dashboard-key-holder created</span><br><span class="line">configmap/kubernetes-dashboard-settings created</span><br><span class="line">role.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">deployment.apps/kubernetes-dashboard created</span><br><span class="line">service/dashboard-metrics-scraper created</span><br><span class="line">deployment.apps/dashboard-metrics-scraper created</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>前台启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl proxy</span><br></pre></td></tr></table></figure><p>后台启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup kubectl proxy &gt;/dev/null &amp;</span><br></pre></td></tr></table></figure><p>现在可以访问： <a href="http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/">http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</a></p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>登录需要获取token</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system describe secret default| awk &#x27;$1==&quot;token:&quot;&#123;print $2&#125;&#x27;</span><br></pre></td></tr></table></figure><p>这是我的返回结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6Imk0TWpNeGM3SWVrMHllMVphM0FPVFZIZ2RIaXZIbll2UzZObkJSZTZ5MUEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZWZhdWx0LXRva2VuLXR2bWJ0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJiZDI3YzljZS0wZWY2LTQ0YTAtYThmNC0xYTg2ZWMxN2JmNTQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06ZGVmYXVsdCJ9.UjlNOPi95jsxtbGXVu6t3LK-1kOjlcLk7_qVPhDEmYD9so5BLnosS6Z_nBfpO2aU5xxMZMMvkTIydMKVTgftzeFpUZ7_ANsqjZ17Z2EnzUxhzkBU9USU3294APU4Gxep1yb4uyetRtIozdsd39-TlMwoCkHb4aGbluZiT64AkbDS6v7PhONaaCIKTT6hxvo4PEiyau_fEKCfI6rsWdcoOWlKLeXOwqGW1tHgIZEPR7Eln8NA52fAOvHyPp5DSKgD3L2qGDAlQNXCFCrB2bc7-xBEEBjeDXOhTIl1sUX6gmhEzp0XFH20JZaSJysvW1ZQGsv_AXj-4PX8Egv1kq1txA</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://github.com/kubernetes/dashboard#getting-started">Kubernetes Dashboard</a></li><li><a href="https://gist.github.com/qwfys/aec4d2ab79281aeafebdb40b22d0b748">常用镜像仓库</a></li></ul><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>recommended.yaml的副本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br></pre></td><td class="code"><pre><span class="line"># Copyright 2017 The Kubernetes Authors.</span><br><span class="line">#</span><br><span class="line"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line"># you may not use this file except in compliance with the License.</span><br><span class="line"># You may obtain a copy of the License at</span><br><span class="line">#</span><br><span class="line">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">#</span><br><span class="line"># Unless required by applicable law or agreed to in writing, software</span><br><span class="line"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"># See the License for the specific language governing permissions and</span><br><span class="line"># limitations under the License.</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-certs</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-csrf</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line">data:</span><br><span class="line">  csrf: &quot;&quot;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-key-holder</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: ConfigMap</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-settings</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Role</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">rules:</span><br><span class="line">  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;secrets&quot;]</span><br><span class="line">    resourceNames: [&quot;kubernetes-dashboard-key-holder&quot;, &quot;kubernetes-dashboard-certs&quot;, &quot;kubernetes-dashboard-csrf&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;update&quot;, &quot;delete&quot;]</span><br><span class="line">    # Allow Dashboard to get and update &#x27;kubernetes-dashboard-settings&#x27; config map.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;configmaps&quot;]</span><br><span class="line">    resourceNames: [&quot;kubernetes-dashboard-settings&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;update&quot;]</span><br><span class="line">    # Allow Dashboard to get metrics.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;services&quot;]</span><br><span class="line">    resourceNames: [&quot;heapster&quot;, &quot;dashboard-metrics-scraper&quot;]</span><br><span class="line">    verbs: [&quot;proxy&quot;]</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;services/proxy&quot;]</span><br><span class="line">    resourceNames: [&quot;heapster&quot;, &quot;http:heapster:&quot;, &quot;https:heapster:&quot;, &quot;dashboard-metrics-scraper&quot;, &quot;http:dashboard-metrics-scraper&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">rules:</span><br><span class="line">  # Allow Metrics Scraper to get metrics from the Metrics server</span><br><span class="line">  - apiGroups: [&quot;metrics.k8s.io&quot;]</span><br><span class="line">    resources: [&quot;pods&quot;, &quot;nodes&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: RoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Role</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: kubernetes-dashboard</span><br><span class="line">    namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: kubernetes-dashboard</span><br><span class="line">    namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kubernetes-dashboard</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kubernetes-dashboard</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: kubernetes-dashboard</span><br><span class="line">          image: kubernetesui/dashboard:v2.0.3</span><br><span class="line">          imagePullPolicy: Always</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8443</span><br><span class="line">              protocol: TCP</span><br><span class="line">          args:</span><br><span class="line">            - --auto-generate-certificates</span><br><span class="line">            - --namespace=kubernetes-dashboard</span><br><span class="line">            # Uncomment the following line to manually specify Kubernetes API server Host</span><br><span class="line">            # If not specified, Dashboard will attempt to auto discover the API server and connect</span><br><span class="line">            # to it. Uncomment only if the default does not work.</span><br><span class="line">            # - --apiserver-host=http://my-address:port</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: kubernetes-dashboard-certs</span><br><span class="line">              mountPath: /certs</span><br><span class="line">              # Create on-disk volume to store exec logs</span><br><span class="line">            - mountPath: /tmp</span><br><span class="line">              name: tmp-volume</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              scheme: HTTPS</span><br><span class="line">              path: /</span><br><span class="line">              port: 8443</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          securityContext:</span><br><span class="line">            allowPrivilegeEscalation: false</span><br><span class="line">            readOnlyRootFilesystem: true</span><br><span class="line">            runAsUser: 1001</span><br><span class="line">            runAsGroup: 2001</span><br><span class="line">      volumes:</span><br><span class="line">        - name: kubernetes-dashboard-certs</span><br><span class="line">          secret:</span><br><span class="line">            secretName: kubernetes-dashboard-certs</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          emptyDir: &#123;&#125;</span><br><span class="line">      serviceAccountName: kubernetes-dashboard</span><br><span class="line">      nodeSelector:</span><br><span class="line">        &quot;kubernetes.io/os&quot;: linux</span><br><span class="line">      # Comment the following tolerations if Dashboard must not be deployed on master</span><br><span class="line">      tolerations:</span><br><span class="line">        - key: node-role.kubernetes.io/master</span><br><span class="line">          effect: NoSchedule</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line">  name: dashboard-metrics-scraper</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8000</span><br><span class="line">      targetPort: 8000</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line">  name: dashboard-metrics-scraper</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: dashboard-metrics-scraper</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: dashboard-metrics-scraper</span><br><span class="line">      annotations:</span><br><span class="line">        seccomp.security.alpha.kubernetes.io/pod: &#x27;runtime/default&#x27;</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: dashboard-metrics-scraper</span><br><span class="line">          image: kubernetesui/metrics-scraper:v1.0.4</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8000</span><br><span class="line">              protocol: TCP</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              scheme: HTTP</span><br><span class="line">              path: /</span><br><span class="line">              port: 8000</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          volumeMounts:</span><br><span class="line">          - mountPath: /tmp</span><br><span class="line">            name: tmp-volume</span><br><span class="line">          securityContext:</span><br><span class="line">            allowPrivilegeEscalation: false</span><br><span class="line">            readOnlyRootFilesystem: true</span><br><span class="line">            runAsUser: 1001</span><br><span class="line">            runAsGroup: 2001</span><br><span class="line">      serviceAccountName: kubernetes-dashboard</span><br><span class="line">      nodeSelector:</span><br><span class="line">        &quot;kubernetes.io/os&quot;: linux</span><br><span class="line">      # Comment the following tolerations if Dashboard must not be deployed on master</span><br><span class="line">      tolerations:</span><br><span class="line">        - key: node-role.kubernetes.io/master</span><br><span class="line">          effect: NoSchedule</span><br><span class="line">      volumes:</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          emptyDir: &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> docker </tag>
            
            <tag> Docker Desktop </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio安装笔记</title>
      <link href="/2021/01/01/software/install/how-to-install-android-studio/"/>
      <url>/2021/01/01/software/install/how-to-install-android-studio/</url>
      
        <content type="html"><![CDATA[<h1 id="Android-Studio安装笔记"><a href="#Android-Studio安装笔记" class="headerlink" title="Android Studio安装笔记"></a>Android Studio安装笔记</h1><p>简单记录一下Android Studio安装</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>从<a href="https://developer.android.google.cn/studio">官网</a>安装Android Studio,</p><p>然后点击安装。</p><h3 id="Android-SDK"><a href="#Android-SDK" class="headerlink" title="Android SDK"></a>Android SDK</h3><p>使用<a href="http://ping.chinaz.com/">http://ping.chinaz.com</a>获取<em>dl.google.com</em>的大陆响应时间最短的IP地址。</p><p>以我为例：180.163.151.161</p><p>将其写入hosts文件(C:\WINDOWS\System32\drivers\etc\hosts)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">180.163.151.161 dl.google.com</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.cnblogs.com/senior-engineer/p/11130757.html">在Android Studio中下载Android SDK的两种方式（Android Studio3.0、windows</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ndroid Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu 18.04.5 LTS上安装minkube</title>
      <link href="/2021/01/01/software/k8s/how-to-install-minkube/"/>
      <url>/2021/01/01/software/k8s/how-to-install-minkube/</url>
      
        <content type="html"><![CDATA[<h2 id="在Ubuntu-18-04-5-LTS上安装minkube"><a href="#在Ubuntu-18-04-5-LTS上安装minkube" class="headerlink" title="在Ubuntu 18.04.5 LTS上安装minkube"></a>在Ubuntu 18.04.5 LTS上安装minkube</h2><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><ol><li>2 CPUs or more</li><li>2GB内存</li><li>20G空间</li><li>无线网络连接</li><li>容器或者虚拟机， 比如: Docker, Hyperkit, Hyper-V, KVM, Parallels, Podman, VirtualBox, or VMWare</li></ol><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo minikube start --registry-mirror=https://registry.docker-cn.com --vm-driver=none --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><h4 id="none-driver-integration-tests-k8s-1-18-needs-conntrack-installed"><a href="#none-driver-integration-tests-k8s-1-18-needs-conntrack-installed" class="headerlink" title="none driver integration tests: k8s 1.18 needs conntrack installed"></a>none driver integration tests: k8s 1.18 needs conntrack installed</h4><p>解决方案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install conntrack</span><br><span class="line">## https://github.com/kubernetes/minikube/issues/7179</span><br></pre></td></tr></table></figure><h2 id="在Windows上安装k8s"><a href="#在Windows上安装k8s" class="headerlink" title="在Windows上安装k8s"></a>在Windows上安装k8s</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>安装<a href="https://desktop.docker.com/win/stable/Docker%20Desktop%20Installer.exe">Docker Desktop</a></p><h3 id="配置docker的国内镜像"><a href="#配置docker的国内镜像" class="headerlink" title="配置docker的国内镜像"></a>配置docker的国内镜像</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://dockerhub.azk8s.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;experimental&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="使用阿里云的镜像"><a href="#使用阿里云的镜像" class="headerlink" title="使用阿里云的镜像"></a>使用阿里云的镜像</h3><p>为了更快的完成一些安装，我们先通过一个阿里云的批处理，提前把Kubernetes需要的Images拉取下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AliyunContainerService/k8s-for-docker-desktop.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> k8s-for-docker-desktop</span><br><span class="line"></span><br><span class="line">.\load_images.ps1</span><br></pre></td></tr></table></figure><h3 id="启动Kubernetes"><a href="#启动Kubernetes" class="headerlink" title="启动Kubernetes"></a>启动Kubernetes</h3><p>在Docker仪表盘上在Settings切到Kubernetes上启动Enabled Kubernetes</p><h3 id="安装Dashboard（可选）"><a href="#安装Dashboard（可选）" class="headerlink" title="安装Dashboard（可选）"></a>安装Dashboard（可选）</h3><p>使用<a href="https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml">recommended.yaml</a>进行安装</p><blockquote><p>如果不能访问<em>recommended.yaml</em>， 可以使用<a href="#%E9%99%84%E5%BD%95">附录</a>的副本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f recommended.yaml </span><br><span class="line">namespace/kubernetes-dashboard created</span><br><span class="line">serviceaccount/kubernetes-dashboard created</span><br><span class="line">service/kubernetes-dashboard created</span><br><span class="line">secret/kubernetes-dashboard-certs created</span><br><span class="line">secret/kubernetes-dashboard-csrf created</span><br><span class="line">secret/kubernetes-dashboard-key-holder created</span><br><span class="line">configmap/kubernetes-dashboard-settings created</span><br><span class="line">role.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span><br><span class="line">deployment.apps/kubernetes-dashboard created</span><br><span class="line">service/dashboard-metrics-scraper created</span><br><span class="line">deployment.apps/dashboard-metrics-scraper created</span><br></pre></td></tr></table></figure><h4 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h4><p>前台启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl proxy</span><br></pre></td></tr></table></figure><p>后台启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup kubectl proxy &gt;/dev/null &amp;</span><br></pre></td></tr></table></figure><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><p>登录需要获取token</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system describe secret default| awk &#x27;$1==&quot;token:&quot;&#123;print $2&#125;&#x27;</span><br></pre></td></tr></table></figure><p>这是我的返回结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6Imk0TWpNeGM3SWVrMHllMVphM0FPVFZIZ2RIaXZIbll2UzZObkJSZTZ5MUEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZWZhdWx0LXRva2VuLXR2bWJ0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJiZDI3YzljZS0wZWY2LTQ0YTAtYThmNC0xYTg2ZWMxN2JmNTQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06ZGVmYXVsdCJ9.UjlNOPi95jsxtbGXVu6t3LK-1kOjlcLk7_qVPhDEmYD9so5BLnosS6Z_nBfpO2aU5xxMZMMvkTIydMKVTgftzeFpUZ7_ANsqjZ17Z2EnzUxhzkBU9USU3294APU4Gxep1yb4uyetRtIozdsd39-TlMwoCkHb4aGbluZiT64AkbDS6v7PhONaaCIKTT6hxvo4PEiyau_fEKCfI6rsWdcoOWlKLeXOwqGW1tHgIZEPR7Eln8NA52fAOvHyPp5DSKgD3L2qGDAlQNXCFCrB2bc7-xBEEBjeDXOhTIl1sUX6gmhEzp0XFH20JZaSJysvW1ZQGsv_AXj-4PX8Egv1kq1txA</span><br></pre></td></tr></table></figure><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>recommended.yaml的副本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br></pre></td><td class="code"><pre><span class="line"># Copyright 2017 The Kubernetes Authors.</span><br><span class="line">#</span><br><span class="line"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span><br><span class="line"># you may not use this file except in compliance with the License.</span><br><span class="line"># You may obtain a copy of the License at</span><br><span class="line">#</span><br><span class="line">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">#</span><br><span class="line"># Unless required by applicable law or agreed to in writing, software</span><br><span class="line"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"># See the License for the specific language governing permissions and</span><br><span class="line"># limitations under the License.</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-certs</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-csrf</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line">data:</span><br><span class="line">  csrf: &quot;&quot;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-key-holder</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">type: Opaque</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: ConfigMap</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-settings</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Role</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">rules:</span><br><span class="line">  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;secrets&quot;]</span><br><span class="line">    resourceNames: [&quot;kubernetes-dashboard-key-holder&quot;, &quot;kubernetes-dashboard-certs&quot;, &quot;kubernetes-dashboard-csrf&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;update&quot;, &quot;delete&quot;]</span><br><span class="line">    # Allow Dashboard to get and update &#x27;kubernetes-dashboard-settings&#x27; config map.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;configmaps&quot;]</span><br><span class="line">    resourceNames: [&quot;kubernetes-dashboard-settings&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;update&quot;]</span><br><span class="line">    # Allow Dashboard to get metrics.</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;services&quot;]</span><br><span class="line">    resourceNames: [&quot;heapster&quot;, &quot;dashboard-metrics-scraper&quot;]</span><br><span class="line">    verbs: [&quot;proxy&quot;]</span><br><span class="line">  - apiGroups: [&quot;&quot;]</span><br><span class="line">    resources: [&quot;services/proxy&quot;]</span><br><span class="line">    resourceNames: [&quot;heapster&quot;, &quot;http:heapster:&quot;, &quot;https:heapster:&quot;, &quot;dashboard-metrics-scraper&quot;, &quot;http:dashboard-metrics-scraper&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">rules:</span><br><span class="line">  # Allow Metrics Scraper to get metrics from the Metrics server</span><br><span class="line">  - apiGroups: [&quot;metrics.k8s.io&quot;]</span><br><span class="line">    resources: [&quot;pods&quot;, &quot;nodes&quot;]</span><br><span class="line">    verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: RoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Role</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: kubernetes-dashboard</span><br><span class="line">    namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: kubernetes-dashboard</span><br><span class="line">    namespace: kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kubernetes-dashboard</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kubernetes-dashboard</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: kubernetes-dashboard</span><br><span class="line">          image: kubernetesui/dashboard:v2.0.3</span><br><span class="line">          imagePullPolicy: Always</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8443</span><br><span class="line">              protocol: TCP</span><br><span class="line">          args:</span><br><span class="line">            - --auto-generate-certificates</span><br><span class="line">            - --namespace=kubernetes-dashboard</span><br><span class="line">            # Uncomment the following line to manually specify Kubernetes API server Host</span><br><span class="line">            # If not specified, Dashboard will attempt to auto discover the API server and connect</span><br><span class="line">            # to it. Uncomment only if the default does not work.</span><br><span class="line">            # - --apiserver-host=http://my-address:port</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: kubernetes-dashboard-certs</span><br><span class="line">              mountPath: /certs</span><br><span class="line">              # Create on-disk volume to store exec logs</span><br><span class="line">            - mountPath: /tmp</span><br><span class="line">              name: tmp-volume</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              scheme: HTTPS</span><br><span class="line">              path: /</span><br><span class="line">              port: 8443</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          securityContext:</span><br><span class="line">            allowPrivilegeEscalation: false</span><br><span class="line">            readOnlyRootFilesystem: true</span><br><span class="line">            runAsUser: 1001</span><br><span class="line">            runAsGroup: 2001</span><br><span class="line">      volumes:</span><br><span class="line">        - name: kubernetes-dashboard-certs</span><br><span class="line">          secret:</span><br><span class="line">            secretName: kubernetes-dashboard-certs</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          emptyDir: &#123;&#125;</span><br><span class="line">      serviceAccountName: kubernetes-dashboard</span><br><span class="line">      nodeSelector:</span><br><span class="line">        &quot;kubernetes.io/os&quot;: linux</span><br><span class="line">      # Comment the following tolerations if Dashboard must not be deployed on master</span><br><span class="line">      tolerations:</span><br><span class="line">        - key: node-role.kubernetes.io/master</span><br><span class="line">          effect: NoSchedule</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line">  name: dashboard-metrics-scraper</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 8000</span><br><span class="line">      targetPort: 8000</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: dashboard-metrics-scraper</span><br><span class="line">  name: dashboard-metrics-scraper</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 10</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: dashboard-metrics-scraper</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: dashboard-metrics-scraper</span><br><span class="line">      annotations:</span><br><span class="line">        seccomp.security.alpha.kubernetes.io/pod: &#x27;runtime/default&#x27;</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: dashboard-metrics-scraper</span><br><span class="line">          image: kubernetesui/metrics-scraper:v1.0.4</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 8000</span><br><span class="line">              protocol: TCP</span><br><span class="line">          livenessProbe:</span><br><span class="line">            httpGet:</span><br><span class="line">              scheme: HTTP</span><br><span class="line">              path: /</span><br><span class="line">              port: 8000</span><br><span class="line">            initialDelaySeconds: 30</span><br><span class="line">            timeoutSeconds: 30</span><br><span class="line">          volumeMounts:</span><br><span class="line">          - mountPath: /tmp</span><br><span class="line">            name: tmp-volume</span><br><span class="line">          securityContext:</span><br><span class="line">            allowPrivilegeEscalation: false</span><br><span class="line">            readOnlyRootFilesystem: true</span><br><span class="line">            runAsUser: 1001</span><br><span class="line">            runAsGroup: 2001</span><br><span class="line">      serviceAccountName: kubernetes-dashboard</span><br><span class="line">      nodeSelector:</span><br><span class="line">        &quot;kubernetes.io/os&quot;: linux</span><br><span class="line">      # Comment the following tolerations if Dashboard must not be deployed on master</span><br><span class="line">      tolerations:</span><br><span class="line">        - key: node-role.kubernetes.io/master</span><br><span class="line">          effect: NoSchedule</span><br><span class="line">      volumes:</span><br><span class="line">        - name: tmp-volume</span><br><span class="line">          emptyDir: &#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> minikube </tag>
            
            <tag> kubernetes </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
